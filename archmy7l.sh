#!/bin/bash
#### Смотрите пометки (справочки) и доп.иформацию в самом скрипте! ####
apptitle="Arch Linux Fast Install v2.4 LegasyBIOS - Version: 2024.07.31.00.40.38 (GPLv3)"
baseurl=https://raw.githubusercontent.com/MarcMilany/archmy_2020/master/url%20links%20abbreviated/git%20url
cpl=0
skipfont="0"
fspkgs=""
EDITOR=nano
#EDITOR=nano visudo  # Выполните команду с правами суперпользователя
###
VIEWER_PROG_LANG="russian"  # Installer default language (Язык установки по умолчанию)
ARCHMY7L_LANG="russian"  # Installer default language (Язык установки по умолчанию)
script_path=$(readlink -f ${0%/*})  # эта опция канонизируется путем рекурсивного следования каждой символической ссылке в каждом компоненте данного имени; все, кроме последнего компонента должны существовать
###
umask 0022 # Определение окончательных прав доступа - Для суперпользователя (root) umask по умолчанию равна 0022
set -e # Эта команда остановит выполнение сценария после сбоя команды и будет отправлен код ошибки
# set -euxo pipefail  # прекращает выполнение скрипта, даже если одна из частей пайпа завершилась ошибкой
#####################
### Help and usage (--help or -h) (Справка)
_help() {
    echo -e "${BLUE}
Installation guide - Arch Wiki
${BOLD}For more information, see the wiki: \
${GREY}<https://wiki.archlinux.org/index.php/Installation_guide>${NC}"
}
###
### SHARED VARIABLES AND FUNCTIONS (ОБЩИЕ ПЕРЕМЕННЫЕ И ФУНКЦИИ)
### Shell color codes (Цветовые коды оболочки)
RED="\e[1;31m"; GREEN="\e[1;32m"; YELLOW="\e[1;33m"; GREY="\e[3;93m"
BLUE="\e[1;34m"; CYAN="\e[1;36m"; BOLD="\e[1;37m"; MAGENTA="\e[1;35m"; NC="\e[0m"
###
### Automatic error detection (Автоматическое обнаружение ошибок)
_set() {
    set [--abefhkmnptuvxBCHP] [-o option] [arg ...]
}
###
_set() {
    set -e "\n${RED}Error: ${YELLOW}${*}${NC}"
    _note "${MSG_ERROR}"
    sleep 1; $$
}
###
###############################
### Warning (Предупреждение)
_warning_banner() {
    echo -e "${YELLOW}
   ====================== ♥ Предупреждение ======================
${NC}
Цель сценария (скрипта) - это установка первоначально необходимого софта (пакетов) и запуск необходимых служб.
Смысл в том, что все изменения вы делаете предварительно в самом скрипте и получаете возможность быстрой установки утилит (пакетов), которые Вы решили установить (при условии, что Вы его изменили под себя, в противном случае скрипт установит софт (пакеты) прописанный изначально.
В процессе работы сценария (скрипта) Вам будут задаваться вопросы на установку той, или иной утилиты (пакета) - будьте внимательными! В скрипте есть утилиты (пакеты), которые устанавливаются из 'AUR'. Это 'Pacman gui' или 'Octopi', в зависимости от вашего выбора, и т.д.. Сам же 'AUR'-'yay' или 'pikaur' - скачивается с сайта 'Arch Linux', собирается и устанавливается. Остальной софт (пакеты) скачивается и устанавливается из 'Официальных репозиториев Arch Linux'. Если Вы сомневаетесь в своих действиях, скриптом можно пользоваться как шпаргалкой, открыв его в текстовом редакторе, копируя команды по установке необходимых пакетов, и запуска необходимых служб. В любой ситуации выбор всегда за вами. Вы либо гуляете под дождем, либо просто под ним мокнете.${RED}

  ***************************** ВНИМАНИЕ! *****************************
${NC}
Автор не несёт ответственности за любое нанесение вреда при использовании скрипта.
Вы используйте его на свой страх и риск, или изменяйте под свои личные нужды.
В данный момент сценарий (скрипта) находится в процессе доработки по прописыванию устанавливаемого софта (пакетов), и небольшой корректировке (Воен. Внесение поправок в наводку орудий по результатам наблюдений с наблюдательных пунктов).

${BLUE}===> ******************************************************* ${NC}"
}
###
### Display banner (Дисплей баннер)
_warning_banner
###
sleep 15
#echo ""
#echo -e "${MAGENTA}==> ${BOLD}Если у Вас беспроводное соединение, запустите nmtui и подключитесь к сети. ${NC}"
#echo 'Если у Вас беспроводное соединение, запустите nmtui и подключитесь к сети.'
# If you have a wireless connection, launch nmtui and connect to the network.
##################
clear
echo -e "${GREEN}
  <<< Начинается установка первоначально необходимого софта (пакетов) и запуск необходимых служб для системы Arch Linux >>>
${NC}"
# Installation of utilities (packages) for the Arch Linux system begins
echo -e "${BLUE}:: ${NC}Установка и настройка начата в $(date +%T)"
#echo "Установка и настройка начата в $(date +%T)"
# Installation and configuration started in $(date +%T)
###
echo ""
echo -e "${GREEN}=> ${NC}Для проверки интернета можно пропинговать какой-либо сервис"
#echo 'Для проверки интернета можно пропинговать какой-либо сервис'
# To check the Internet, you can ping a service
ping -c 2 archlinux.org  # Утилита ping - это очень простой инструмент для диагностики сети
# ping google.com -W 2 -c 1
## ping -l 3 ya.ru
###
echo -e "${CYAN}==> ${NC}Если пинг идёт едем дальше ... :)"
#echo 'Если пинг идёт едем дальше ... :)'
# If the ping goes we go further ... :)
sleep 1
###
echo ""
echo -e "${MAGENTA}==> ${NC}Давайте проверим наш часовой пояс ... :)"
#echo 'Давайте проверим наш часовой пояс ... :)'
# Let's check our time zone ... :)
timedatectl | grep "Time zone"
sleep 1
###
echo ""
echo -e "${BLUE}:: ${NC}Если NetworkManager запущен смотрим состояние интерфейсов"
#echo "Если NetworkManager запущен смотрим состояние интерфейсов"
# If NetworkManager is running look at the state of the interfaces
# Первым делом нужно запустить NetworkManager:
# sudo systemctl start NetworkManager
# Если NetworkManager запущен смотрим состояние интерфейсов (с помощью - nmcli):
nmcli general status
sleep 1
###
echo ""
echo -e "${BLUE}:: ${NC}Посмотреть имя хоста"
# View host name
nmcli general hostname
sleep 1
###
echo ""
echo -e "${BLUE}:: ${NC}Получаем состояние интерфейсов"
# Getting the state of interfaces
nmcli device status
sleep 1
###
echo ""
echo -e "${BLUE}:: ${NC}Смотрим список доступных подключений"
# See the list of available connections
nmcli connection show
sleep 1
###
echo ""
echo -e "${BLUE}:: ${NC}Смотрим состояние wifi подключения"
# Looking at the status of the wifi connection
nmcli radio wifi
sleep 1
## ---------------------------------------
## Посмотреть список доступных сетей wifi:
# nmcli device wifi list
## Теперь включаем:
# nmcli radio wifi on
## Или отключаем:
# nmcli radio wifi off
## Команда для подключения к новой сети wifi выглядит не намного сложнее. Например, давайте подключимся к сети TP-Link с паролем 12345678:
## nmcli device wifi connect "TP-Link" password 12345678 name "TP-Link Wifi"
## Если всё прошло хорошо, то вы получите уже привычное сообщение про создание подключения с именем TP-Link Wifi и это имя в дальнейшем можно использовать для редактирования этого подключения и управления им, как описано выше.
## ---------------------------------------
###
echo ""
echo -e "${BLUE}:: ${NC}Посмотрим данные о нашем соединение с помощью IPinfo..."
#echo " Посмотрим данные о нашем соединение с помощью IPinfo..."
# Let's look at the data about our connection using IP info...
echo -e "${CYAN}=> ${NC}С помощью IPinfo вы можете точно определять местонахождение ваших пользователей, настраивать их взаимодействие, предотвращать мошенничество, обеспечивать соответствие и многое другое."
echo " Надежный источник данных IP-адресов (https://ipinfo.io/) "
wget http://ipinfo.io/ip -qO -
sleep 03
###
echo ""
echo -e "${BLUE}:: ${NC}Узнаем версию и данные о релизе Arch'a ... :) "
#echo "Узнаем версию и данные о релизе Arch'a ... :)"
# Find out the version and release data for Arch ... :)
cat /proc/version
cat /etc/lsb-release.old
sleep 02
####################
clear
echo -e "${CYAN}
  <<< Установка обновлений для системы Arch Linux >>> ${NC}"
# Installation of utilities (packages) for the Arch Linux system begins
echo ""
echo -e "${GREEN}==> ${NC}Обновим вашу систему (базу данных пакетов)?"
#echo -e "${BLUE}:: ${NC}Обновим вашу систему (базу данных пакетов)"
#echo "Обновим вашу систему (базу данных пакетов)"
# Update your system (package database)
echo -e "${CYAN}=> ${BOLD}В сценарии (скрипте) присутствуют следующие варианты: ${NC}"
echo " 1 - Обновление базы данных пакетов плюс обновление самих пакетов (pacman -Syyu) "
echo -e "${RED}==> Важно! ${NC}Если при обновлении системы прилетели обновления ядра и установились, то Вам нужно желательно остановить исполнения сценария (скрипта), и выполнить команду по обновлению загрузчика 'grub' - sudo grub-mkconfig -o /boot/grub/grub.cfg , затем перезагрузить систему."
echo -e "${YELLOW}==> Примечание: ${BOLD}Загружаем базу данных пакетов независимо от того, есть ли какие-либо изменения в версиях или нет. ${NC}"
# Loading the package database regardless of whether there are any changes in the versions or not.
echo " 2 - Просто обновить базы данных пакетов пакмэна (pacman -Syy) "
echo -e "${YELLOW}==> Примечание: ${BOLD}Возможно Вас попросят ввести пароль пользователя (user). ${NC}"
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. "
# Be careful! The installation process was fully automatic.
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again...
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Обновить и установить (pacman -Syyu),     2 - Обновить базы данных пакетов (pacman -Syy)

    0 - НЕТ - Пропустить обновление и установку: " upd_sys  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$upd_sys" =~ [^120] ]]
do
    :
done
if [[ $upd_sys == 0 ]]; then
  echo ""
  echo " Установка обновлений пропущена "
elif [[ $upd_sys == 1 ]]; then
  echo ""
  echo " Установка обновлений (базы данных пакетов) "
  sudo pacman -Syyu --noconfirm  # Обновление баз плюс обновление пакетов (--noconfirm - не спрашивать каких-либо подтверждений)
# sudo pacman -Syyu  # Обновим вашу систему (базу данных пакетов)
  echo ""
  echo " Обновление и установка выполнено "
elif [[ $upd_sys == 2 ]]; then
  echo ""
  echo " Обновим базы данных пакетов... "
# sudo pacman -Sy --noconfirm  # обновить списки пакетов из репозиториев
  sudo pacman -Syy  # обновление баз пакмэна (pacman)
  echo ""
  echo " Обновление базы данных выполнено "
fi
sleep 1
################

clear
echo -e "${MAGENTA}
  <<< Установка программ для просмотра изображений в Archlinux >>> ${NC}"
# Installing image viewer programs in Archlinux
#clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Flameshot (flameshot) - Создание скриншотов?"
echo -e "${MAGENTA}:: ${BOLD}Flameshot - инструмент для создания и редактирования скриншотов в Linux. ${NC}"
echo " Что подкупило в Flameshot, так это то, что во время создания снимка имеется возможность редактирования, без необходимости предварительного сохранения снимка, т.е. создание и редактирование в одном окне или на лету. "
echo " Возможности программы Flameshot: Создание скриншота рабочего стола. Создание скриншота выбранной области. Создание скриншота активного окна программы. Редактирование скриншота: Добавление графических примитивов: стрелок, прямоугольников, окружностей, линий. Выделение маркером (полупрозрачное выделение). Размытие выделенной области. "
echo " Возможность прикрепить скриншот на рабочий стол (в плавающем окне). Копирование снимков в буфер обмена. Открытие снимка во внешней программе. Загрузка снимка на сервис Imgur. Изменение цвета интерфейса программы. Задание шаблона для имен файлов. Доступны предустановленные элементы для шаблона имени файла: год, день недели, месяц, время, час, минута, секунда, название месяца и другие. Всплывающие уведомления на рабочем столе. Поддержка командной строки. "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_screen  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_screen" =~ [^10] ]]
do
    :
done
if [[ $in_screen == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_screen == 1 ]]; then
  echo ""
  echo " Установка Flameshot "
sudo pacman -Syy  # обновление баз пакмэна (pacman)  
sudo pacman -S --noconfirm --needed flameshot  # Мощное, но простое в использовании программное обеспечение для создания снимков экрана ; https://github.com/flameshot-org/flameshot ; https://archlinux.org/packages/extra/x86_64/flameshot/
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Shutter (shutter) - Создание скриншотов?"
echo -e "${MAGENTA}:: ${BOLD}Shutter — это многофункциональная программа для создания снимков экрана для операционных систем на базе Linux. Вы можете сделать снимок экрана определенной области, окна, всего экрана или даже веб-сайта — применить к нему различные эффекты, нарисовать на нем, чтобы выделить точки, а затем загрузить на сайт хостинга изображений, и все это в одном окне. Shutter — бесплатная программа с открытым исходным кодом , распространяется по лицензии GPL v3 . ${NC}"
echo " Домашняя страница: http://shutter-project.org/ ; (https://archlinux.org/packages/extra/any/shutter). "  
echo -e "${MAGENTA}:: ${BOLD}Программа позволяет применять различные эффекты к сделанным скриншотам. Для этого нужно выделить один или несколько скриншотов и выбрать в меню программы пункт Снимок->Применить модуль. Также в Shutter встроен простой редактор для обработки изображений и каждый скриншот можно обработать с его помощью. Каждый скриншот можно сохранить на жесткий диск, загрузить на FTP-сервер, закачать на хостинг изображений или в хранилище Ubuntu One. ${NC}"
echo " Shutter позволяет вам захватывать практически все, что находится на экране, не теряя контроля над скриншотами (интерфейс с вкладками). Вот обзор того, что вы можете делать с Shutter: Захват определенной области; Захватите свой рабочий стол; Захват окна; Захват меню или подсказки; Захват веб-сайта - Shutter использует gnome-web-photo для захвата веб-сайта без открытия окна браузера. Редактировать: Добавьте текст, стрелки, прямоугольники, эллипсы… Цензура / Пикселизация для сокрытия личных данных. Форма автоинкремента. Обрезать. Исходный код: Open Source (открыт); Языки программирования: Perl; Библиотеки: GTK; Лицензия: GNU GPL; Приложение переведено на русский язык. К счастью, в 2021 году его капитально обновили , и теперь его установка не составит никакого труда. " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_shutter  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_shutter" =~ [^10] ]]
do
    :
done
if [[ $in_shutter == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_shutter == 1 ]]; then
  echo ""
  echo " Установка Shutter (shutter) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed shutter  # Многофункциональный инструмент для создания снимков экрана ; https://shutter-project.org/ ; https://archlinux.org/packages/extra/any/shutter/ ; 18 июня 2024 г., 12:07 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить digiKam (для управления цифровыми фотографиями)?"
echo -e "${MAGENTA}:: ${BOLD}digiKam - это это органайзер изображений на базе KDE со встроенными функциями редактирования с помощью архитектуры плагинов. Программа DigiKam органично интегрирована в среду рабочего стола KDE. Для корректного отображения значков (без пропущенных значков), когда вы не используете среду рабочего стола KDE, необходимо установить тему значков KDE (breeze-icons) и активировать ее в настройках Digikam. После установки вам следует настроить Digikam на использование значков: Перейдите в Настройки > Настроить digiKam > Разное, затем в меню Внешний вид выберите (Breeze) или (Breeze Dark) в качестве темы значка. Значки Breeze для других рабочих столов: Совместимо с KDE, GNOME, Xfce, Cinnamon, MATE, LXQt. Язык интерфейса: русский, английский и другие... Лицензия: GNU GPL. Интерфейс: Qt. ${NC}"
echo " Домашняя страница: https://www.digikam.org/ ; (https://sourceforge.net/software/product/digiKam/ ; https://archlinux.org/packages/extra/x86_64/digikam/ ; https://wiki.archlinux.org/title/Digikam). "  
echo -e "${MAGENTA}:: ${BOLD}Описание: Программа поддерживает импорт фотографий, RAW-файлов и видео напрямую с фотоаппарата, внешних устройств (SD карт, USB носителей и так далее). Позволяет настраивать и выполнять автоматическую каталогизацию во время импорта файлов. Например распределять файлы по альбомам, используя дату снимка. digiKam размещает файлы по альбомам. ${NC}"
echo " Есть возможность добавлять теги, выставлять оценки и добавлять пометки к каждому файлу. Поддерживается поиск и выборка файлов по различным критериям. Можно искать файлы по тегам, рейтингу, локации, названию, по EXIF, IPTC и XMP метаданным. Поддерживается работа с RAW-файлами. Программа имеет возможность просмотра альбомов на карте, используя гео-информацию в метаданных. " 
echo " Программа включает целый набор инструментов для редактирования фотографий: баланс цвета, коррекция яркости, контрастности, гаммы, кадрирование, изменение размера, изменение резкости, настройка кривых, формирование панорамы, смешение каналов, инструменты улучшения снимков, добавление текста, добавление водяного знака, преобразование в другие форматы и другие.  "
echo " Программа digiKam имеет очень гибкий интерфейс, который можно настраивать в широких пределах. При первом запуске программы открывается Визард, в котором нужно выполнить некоторые первичные настройки. Вам будет предложено выбрать директорию, в которой хранятся ваши фотографии. Позднее можно добавлять дополнительные директории через настройки программы. Также при первом запуске нужно указать директорию, в которой будут хранится данные самой программы (база данных программы). "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_digikam  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_digikam" =~ [^10] ]]
do
    :
done
if [[ $in_digikam == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_digikam == 1 ]]; then
  echo ""
  echo " Установка digiKam "
sudo pacman -Syy  # обновление баз пакмэна (pacman)  
sudo pacman -S --noconfirm --needed digikam  # Расширенное приложение для управления цифровыми фотографиями ; https://www.digikam.org/ ; https://sourceforge.net/software/product/digiKam/ ; https://archlinux.org/packages/extra/x86_64/digikam/ ; https://wiki.archlinux.org/title/Digikam
############## Breeze-icons ##########
sudo pacman -S --noconfirm --needed breeze-icons  # Тема иконок Breeze ; https://community.kde.org/Frameworks ; https://archlinux.org/packages/extra/x86_64/breeze-icons/ ; https://github.com/KDE/breeze-icons
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
######################## Справка ###################
### digikam-plugins-demo - https://github.com/cgilles/digikam-plugins-demo ; https://github.com/cgilles/digikam-plugins-demo.git
### Этот репозиторий содержит несколько демонстрационных кодов для написания новых внешних плагинов digiKam (Digikam::DPlugin). Он предоставляет 4 плагина: Универсальный инструмент ; Инструмент «Редактор изображений» ; Инструмент диспетчера пакетной очереди ; Raw Import for Image Editor. Этот плагин открывает RAW-файл в редакторе с помощью простого вызова командной строки с помощью инструмента dcraw.
### Плагины не зависят от фреймворка KDE. Плагины можно скомпилировать с помощью Qt5 или Qt6. 
### Breeze-icons — тема иконок, совместимая с freedesktop.org. Она разработана сообществом KDE как часть KDE Frameworks 5 и используется по умолчанию в KDE Plasma 5 и KDE Applications. Инструкции по использованию значков Breeze описаны на сайте develop.kde.org/hig .
### Значки Breeze для других рабочих столов: Совместимо с KDE, GNOME, Xfce, Cinnamon, MATE, LXQt.
########################################################

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Eog (Eye of GNOME) (для просмотра изображений)?"
echo -e "${MAGENTA}:: ${BOLD}Eog (Eye of GNOME) - это простая программа для просмотра графики для рабочего стола GNOME, которая использует библиотеку gdk-pixbuf. Она может работать с большими изображениями, масштабировать и прокручивать их при постоянном использовании памяти. Ее целью является простота и соответствие стандартам. Eye of GNOME также отображает EXIF-метаданные об изображении. ${NC}"
echo " В отличие от других программ просмотра, Eye of GNOME предоставляет только базовые возможности работы с изображениями такие как: масштабирование изображения, полноэкранный режим просмотра и интерполирование при увеличении изображения. (https://archlinux.org/packages/extra/x86_64/eog/ ; https://github.com/GNOME/eog ; Домашняя страница: http://projects.gnome.org/eog . "  
echo -e "${MAGENTA}:: ${BOLD}Описание Eog (Eye of GNOME) - Сильные стороны Eog: Поддерживаемые графические форматы: ANI, BMP, GIF, ICO, JPEG, PCX, PNG, PNM, RAS, SVG, TGA, TIFF, WBMP, XBM, XPM ; Перелистывание изображений - Space/Backspace и стрелка Вправо/стрелка Влево, масштаб - колесо мыши ; При отображении изображения применяется сглаживание ; Есть полноэкранный режим и режим слайд-шоу ; Можно развернуть изображение по часовой и против часовой стрелки, а так же отразить горизонтально и вертикально и т.д.. ${NC}"
echo " Слабые стороны Eog: Eye of GNOME работает заметно медленнее, чем другие приложения такого рода ; Панель предпросмотра можно разместить только снизу, при этом нельзя изменить её размер ; Отсутствуют инструменты редактирования изображений ; Не поддерживается GIF-анимация. " 
echo " Язык интерфейса: русский, английский ; Лицензия: GNU GPL вер.2. "
echo " В 2023 году разработчики GNOME осуществили релиз Loupe, который стал заменой Eye of GNOME ; (https://archlinux.org/packages/extra/x86_64/loupe/) (https://gitlab.gnome.org/GNOME/loupe). "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_eog  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_eog" =~ [^10] ]]
do
    :
done
if [[ $in_eog == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_eog == 1 ]]; then
  echo ""
  echo " Установка Eog (Eye of GNOME) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)  
sudo pacman -S --noconfirm --needed eog  #  Eye of Gnome: программа для просмотра и каталогизации изображений ; https://archlinux.org/packages/extra/x86_64/eog/ ; https://github.com/GNOME/eog
sudo pacman -S --noconfirm --needed eog-plugins  # Плагины для Eye of Gnome
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Loupe (для просмотра изображений)?"
echo -e "${MAGENTA}:: ${BOLD}Loupe - это новое приложение для просмотра изображений в GNOME. Оно написано на безопасном для памяти языке программирования Rust и предлагает ряд функций, таких как: кнопки на экране для переключения между различными фотографиями, увеличения и уменьшения масштаба, перехода в полноэкранный режим и другие ; встроенный в интерфейс инструмент просмотра метаданных, который показывает такие данные, как местоположение, размер, разрешение, дата создания и т. д. ; поддержка клавиатурных и трекпада сочетаний клавиш ; опции копирования в буфер обмена, перемещения в корзину и печати изображения. ${NC}"
echo " Loupe может заменить существующий Eye of GNOME (eog) Image Viewer ; Домашняя страница: https://github.com/GNOME/loupe ; (https://gitlab.gnome.org/GNOME/loupe ; https://archlinux.org/packages/extra/x86_64/loupe/). "  
echo -e "${MAGENTA}:: ${BOLD}Image Viewer использует glycin для загрузки изображений. Вы можете проверить README glycin для получения более подробной информации о форматах, поддерживаемых загрузчиками по умолчанию. Однако glycin поддерживает добавление загрузчиков для дополнительных форматов. Поэтому поддерживаемые форматы в вашей системе могут различаться и могут быть изменены путем установки или удаления загрузчиков glycin. ${NC}"
echo " Если вы вручную собираете Loupe в своей системе с помощью Builder, убедитесь, что вы также установили ночную версию для работы всех функций. В противном случае версия для разработки не будет иметь требуемых разрешений Flatpak. " 
echo " В 2023 году разработчики GNOME осуществили релиз Loupe, который стал заменой Eye of GNOME. "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_loupe  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_loupe" =~ [^10] ]]
do
    :
done
if [[ $in_loupe == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_loupe == 1 ]]; then
  echo ""
  echo " Установка Loupe (of GNOME) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)  
sudo pacman -S --noconfirm --needed loupe  # Простой просмотрщик изображений для GNOME (лупа); https://archlinux.org/packages/extra/x86_64/loupe/ ; https://gitlab.gnome.org/GNOME/loupe
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Viewnior (для просмотра изображений)?"
echo -e "${MAGENTA}:: ${BOLD}Viewnior - это элегантный и минималистичный просмотрщик изображений для систем Linux. Он поддерживает различные функции, такие как полноэкранный режим, слайд-шоу, поворот, переворот, обрезка и другие операции с изображениями. Он также имеет настраиваемое действие мыши и простой интерфейс. ${NC}"
echo " Просмотрщик изображений Viewnior использует модифицированную пользователем библиотеку GtkImageView. Эта библиотека обеспечивает быстрый и плавный просмотр изображений. "  
echo -e "${MAGENTA}:: ${BOLD}Viewnior может просматривать только выбранные изображения. Таким образом, вы можете отфильтровать нежелательные файлы. ${NC}"
echo " Также может автоматически определять среду рабочего стола и устанавливать соответствующее изображение в качестве обоев ; отображать метаданные EXIF ​​и IPTC. Оба содержат настройки камеры, местоположения и информацию о дате. " 
echo " Кроме того, вы можете открыть изображение с помощью Viewnior, непосредственно из файлового менеджера (viewnior ~/Downloads/test_image.jpg).  "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_viewnior  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_viewnior" =~ [^10] ]]
do
    :
done
if [[ $in_viewnior == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_viewnior == 1 ]]; then
  echo ""
  echo " Установка Viewer "
sudo pacman -Syy  # обновление баз пакмэна (pacman)  
sudo pacman -S --noconfirm --needed viewnior  #  Простая, быстрая и элегантная программа просмотра изображений ; https://siyanpanayotov.com/project/viewnior ; https://archlinux.org/packages/extra/x86_64/viewnior/
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
###################

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Gwenview (gwenview) - Просмотрщик изображений?"
echo -e "${MAGENTA}:: ${BOLD}Gwenview — это быстрый и простой в использовании просмотрщик изображений от KDE, идеально подходящий для просмотра и отображения коллекций изображений с возможностями базового редактирования. ${NC}"
echo " Домашняя страница: https://apps.kde.org/gwenview/ ; (https://archlinux.org/packages/kde-unstable/x86_64/gwenview/). "  
echo -e "${MAGENTA}:: ${BOLD}Функции: Простое редактирование изображений: поворот, обрезка, изменение размера, зеркальное отражение, переворот, устранение эффекта красных глаз, настройка яркости, контрастности или гаммы. Добавляйте к изображениям примечания и разметку с помощью стрелок, фигур, текстовых полей, штампов изображений и многого другого. Базовые действия по управлению файлами, такие как переименование, копирование, перемещение, удаление , создание линков и директорий и некоторые другие. Функционирует как отдельное приложение и встроенный просмотрщик в веб-браузере Konqueror. Доступен режим просмотра директорий, при котором, отображается содержимое директории в виде миниатюр, а на директориях, содержащих файлы изображений, отображаются маленькие миниатюры этих изображений. Функциональность Gwenview можно расширить с использованием дополнительных KIPI-плагинов (KDE Image Plugin Interface). ${NC}"
echo " Интерфейс: Главное окно программы в левой части содержит панель с вкладками: вкладку с браузером файлов; вкладку с информацией об изображении; и вкладку с кнопками для редактирования изображения и файловыми операциями. В нижней части можно отобразить полоску с миниатюрами. Основную часть окна занимает непосредственно просматриваемое изображение. Разрабатывается в рамках проекта: KDE; Исходный код: Open Source (открыт); Языки программирования: C; C++; Лицензия: GNU GPL; Приложение переведено на русский язык. " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_gwenview  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_gwenview" =~ [^10] ]]
do
    :
done
if [[ $in_gwenview == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_gwenview == 1 ]]; then
  echo ""
  echo " Установка Gwenview (gwenview) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed gwenview  # Быстрый и простой в использовании просмотрщик изображений ; https://apps.kde.org/gwenview/ ; https://archlinux.org/packages/kde-unstable/x86_64/gwenview/ ; 15 августа 2024 г., 20:58 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Nomacs (nomacs) - Функциональный просмотрщик изображений?"
echo -e "${MAGENTA}:: ${BOLD}Nomacs — просмотрщик изображений с возможностями обработки фото. Поддерживает все популярные форматы файлов изображений, включая RAW и PSD. Имеет настраиваемы интерфейс. Nomacs распространяется бесплатно и имеет открытый исходный код. Программа кроссплатформенная и может работать в Linux, Windows, MacOS. Работает Nomacs очень быстро, изображения грузятся без задержек. Интерфейс очень отзывчивый. 🍸 ${NC}"
echo " Домашняя страница: https://nomacs.org/ ; (https://aur.archlinux.org/packages/nomacs). "  
echo -e "${MAGENTA}:: ${BOLD}Основные возможности программы Nomacs: Поддержка большого количества форматов файлов-изображений. Поддержка RAW, PSD, векторных форматов. Настраиваемый интерфейс. Возможность включать и отключать элементы интерфейса. Просмотр EXIF информации. Просмотр гистограммы изображений. Просмотр миниатюр во всплывающей панели. Добавление заметок к изображениям. Используется EXIF поле Exif.Image.ImageDescription. Функция Антиалиасинга при просмотре изображений. Специальный безрамочный режим интерфейса Frameless, когда окно программы полностью прозрачное, а просматриваемые изображения открываются в плавающих окнах. Возможность менять прозрачность окна программы. Встроенный проводник файлов. Поиск, фильтрация, сортировка файлов. Режим Слайдшоу. Открытие файлов во внешнем редакторе. Поддержка горячих клавиш. Поддержка вкладок. Специальный режим «Синхронизация» для синхронизации действий между несколькими экземплярами программы. Возможность синхронизации по сети. Приватный режим. Поддержка плагинов для расширения возможностей программы. Плагины могут добавлять новые фильтры, новые возможности редактирования фотографий и другие мини-утилиты. ${NC}"
echo " Nomacs включает в себя средства обработки изображений. Среди них: Обрезка (кроп). Изменение размера. Поворот и отражение. Изменение цветовой палитры. Автокорректировка. Настройка яркости, контрастности, насыщенности, резкости, экспозиции. Фильтр — Крохотная планета, который закручивает изображение. Nomacs имеет несколько встроенных утилит: Утилита для создания многостраничного TIFF-файла. Утилита для извлечения изображений из файлов zip-архивов, офисных документов docx, pptx, xlsx. Утилита для формирования большого изображения-мозаики из нескольких файлов. Утилита для пакетной обработки изображений. Утилита для импорта дополнительных форматов изображений. Интерфейс: Главное окно программы имеет меню в верхней части, под ним расположена панель с кнопками. Остальную часть окна занимает область просмотра изображения и различные панели, которые либо выводят информацию, либо используются для каких-либо действий. " 
echo -e "${CYAN}:: ${NC}Установка Nomacs (nomacs) проходит через сборку из AUR (yay). Если хотите можете собрать пакет через - git clone, PKGBUILD, makepkg - эта функция тоже прописана в сценарии скрипта, НО # закомментирована! "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_nomacs  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_nomacs" =~ [^10] ]]
do
    :
done
if [[ $in_nomacs == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_nomacs == 1 ]]; then
  echo ""
  echo " Установка Nomacs (nomacs) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
######### nomacs ###########
yay -S nomacs --noconfirm  # Просмотрщик изображений Qt ; https://aur.archlinux.org/nomacs.git (только для чтения, нажмите, чтобы скопировать); https://github.com/nomacs/nomacs ; https://aur.archlinux.org/packages/nomacs ; 2024-07-20 11:54 (UTC)
#git clone https://aur.archlinux.org/nomacs.git   # (только для чтения, нажмите, чтобы скопировать)
#cd nomacs
# makepkg -fsri
# makepkg -si
#makepkg -si --noconfirm   #--не спрашивать каких-либо подтверждений
# makepkg -si --skipinteg
#pwd    # покажет в какой директории мы находимся
#cd ..   # поднимаемся на уровень выше (выходим из папки сборки)
# rm -rf nomacs 
#rm -Rf nomacs
# Еще один пакет попадает в список игнорирования - opencv. Обновление до последней версии v4.8.0 приводит к тому, что nomacs больше не открывается при нажатии на изображение. Понижение до версии 4.7.0 исправляет это.
######## nomacs-git ###########
# yay -S nomacs-git --noconfirm  #  Бесплатный просмотрщик изображений с открытым исходным кодом, поддерживающий несколько платформ ; https://aur.archlinux.org/nomacs-git.git (только для чтения, нажмите, чтобы скопировать) ; https://nomacs.org/ ; https://aur.archlinux.org/packages/nomacs-git ; 2023-10-28 00:05 (UTC) ; Конфликты: с nomacs ; git+https://github.com/nomacs/nomacs.git
######## nomacs-qt6-git ###########
# yay -S nomacs-qt6-git --noconfirm  # Просмотрщик изображений Qt ; https://aur.archlinux.org/nomacs-qt6-git.git (только для чтения, нажмите, чтобы скопировать) ; https://nomacs.org/ ; https://aur.archlinux.org/packages/nomacs-qt6-git ; 2024-02-16 15:12 (UTC) ; Конфликты: с nomacs ; git+https://github.com/v-tyrtov/nomacs-plugins.git
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить XnViewMP (xnviewmp) - Просмотрщик изображений?"
echo -e "${MAGENTA}:: ${BOLD}XnViewMP (XnView Multi Platform) — мощный просмотрщик изображений для Linux. Программа может выполнять функции менеджера фотографий (каталогизатора) и конвертера. Позволяет выполнять редактирование изображений, поддерживается экспорт в различные форматы. Поддерживает более 500 графических форматов файлов. ${NC}"
echo " Домашняя страница: https://www.xnview.com/en/xnviewmp/ ; (https://aur.archlinux.org/packages/xnviewmp). "  
echo -e "${MAGENTA}:: ${BOLD}XnView MP — это кроссплатформенная программа для просмотра изображений, поддерживающая просмотр более 500 и сохранение (конвертирование) до 70 различных графических и мультимедийных форматов файлов. Программа распространяется бесплатно для некоммерческого и образовательного использования. XnView MP по функциональным возможностям не уступает таким известным и популярным средствам просмотра графических форматов, как программам ACDSee и IrfanView. XnView MP прекрасно работает со сканером и принтером. XnView — один из самых стабильных, простых в использовании и всеобъемлющих редакторов фотографий. ${NC}"
echo " Просмотр файлов в XnView MP: Режим предварительного просмотра (эскизов) файлов. Просмотр файлов в окне и в полноэкранном режиме. Уменьшение/увеличение видимого размера изображения. Просмотр многостраничных и анимированных изображений. Получение изображения со сканера. Отображение сведений о изображении, в том числе информации EXIF. Подсчёт количества использованных в картинке цветов. Отображение файлов в режиме слайд-шоу в окне и полноэкранном режиме. Установка просматриваемого изображения в качестве обоев рабочего стола. Возможность задать некоторые папки в качестве избранных для быстрого доступа к ним. Просмотр видеофайлов при наличии соответствующих кодеков в системе. Базовые возможности редактирования изображений: Выделение части изображения, вырезание, копирование выделенной части в буфер обмена, вставка из буфера обмена. Поворот изображения. Преобразование цветов рисунка, замена цветовой палитры. Изменение размера изображения. Вставка текстовой надписи. Применение к изображению различных эффектов. Коррекция «эффекта красных глаз». " 
echo -e "${CYAN}:: ${NC}Установка XnViewMP (xnviewmp) и (xnviewmp-system-libs) проходит через сборку из AUR (yay). Если хотите можете собрать пакет через - git clone, PKGBUILD, makepkg - эта функция тоже прописана в сценарии скрипта, НО # закомментирована! ⚠ Пакет: (xnviewmp-system-libs) - Это точно такая же сборка, за исключением того, что входящие в комплект библиотеки Qt/icu удалены. Пожалуйста, попробуйте, если хотите использовать XnView без входящих в комплект библиотек. Однако имейте в виду, что это экспериментальный пакет, и что-то может сломаться! "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Установить XnViewMP (xnviewmp),     2 - Установить XnViewMP (xnviewmp-system-libs),

    0 - НЕТ - Пропустить установку: " in_xnviewmp  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_xnviewmp" =~ [^120] ]]
do
    :
done
if [[ $in_xnviewmp == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_xnviewmp == 1 ]]; then
  echo ""
  echo " Установка XnViewMP (xnviewmp) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
############## xnviewmp #############
yay -S xnviewmp --noconfirm  # Эффективный просмотрщик, браузер и конвертер мультимедиа ; https://aur.archlinux.org/xnviewmp.git (только для чтения, нажмите, чтобы скопировать) ; https://www.xnview.com/en/xnviewmp/ ; 2024-06-07 17:35 (UTC)
#git clone https://aur.archlinux.org/xnviewmp.git  # (только для чтения, нажмите, чтобы скопировать)
#cd xnviewmp
# makepkg -fsri
# makepkg -si
#makepkg -si --noconfirm   #--не спрашивать каких-либо подтверждений
# makepkg -si --skipinteg
#pwd    # покажет в какой директории мы находимся
#cd ..   # поднимаемся на уровень выше (выходим из папки сборки)
# rm -rf xnviewmp 
#rm -Rf xnviewmp
echo ""
echo " Установка утилит (пакетов) выполнена "
elif [[ $in_xnviewmp == 2 ]]; then
  echo ""
  echo " Установка XnViewMP (xnviewmp-system-libs) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
############## xnviewmp-system-libs #############
yay -S xnviewmp-system-libs --noconfirm  # Эффективный просмотрщик, браузер и конвертер мультимедиа (использующий системные библиотеки) ; https://aur.archlinux.org/xnviewmp-system-libs.git (только для чтения, нажмите, чтобы скопировать) ; https://www.xnview.com/en/xnviewmp/ ; https://aur.archlinux.org/packages/xnviewmp-system-libs ; Конфликты: xnviewmp ; 2024-06-07 17:36 (UTC)
#git clone https://aur.archlinux.org/xnviewmp-system-libs.git  # (только для чтения, нажмите, чтобы скопировать)
#cd xnviewmp-system-libs
# makepkg -fsri
# makepkg -si
#makepkg -si --noconfirm   #--не спрашивать каких-либо подтверждений
# makepkg -si --skipinteg
#pwd    # покажет в какой директории мы находимся
#cd ..   # поднимаемся на уровень выше (выходим из папки сборки)
# rm -rf xnviewmp-system-libs 
#rm -Rf xnviewmp-system-libs
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo -e "${MAGENTA}
  <<< Установка программ для рисования и редактирования изображений в Archlinux >>> ${NC}"
# Installing programs for drawing and editing images in Archlinux
echo ""
echo -e "${BLUE}:: ${NC}Установить GIMP (для обработки изображений GNU)?"
echo -e "${MAGENTA}:: ${BOLD}GIMP - это растровый графический редактор для Linux. Программа предназначена для создания и обработки растровой графики и частичной поддержкой работы с векторной графикой. ${NC}"
echo " GIMP является почти полноценной альтернативой такой известной программы, как Adobe Photoshop. (https://www.gimp.org/downloads/ ; https://wiki.archlinux.org/title/GIMP ; https://docs.gimp.org/en/gimp-scripting.html) "
echo -e "${YELLOW}==> ${NC}Примечание: плагин Python-Fu недоступен в версии GIMP, распространяемой через официальные репозитории, поскольку для него требуется python2 из AUR (https://aur.archlinux.org/packages/python2), поддержка которого прекращена в 2020 году. Для восстановления функциональности можно использовать python2-gimp из AUR (https://aur.archlinux.org/packages/python2-gimp) (https://aur.archlinux.org/packages?K=gimp-plugin). "
echo " В частности, тема GimpPs направлена ​​на то, чтобы сделать GIMP более похожим на Photoshop, который можно установить поверх GIMP.. (https://github.com/doctormo/GimpPs ; https://github.com/doctormo/GimpPs.git). "
echo " Если же вам нужны только сочетания клавиш, соответствующие строки включены в файл темы menurc, который вы затем можете добавить в свой локальный ~/.config/GIMP/2.10/menurc. "
echo -e "${CYAN}=> ${BOLD}В сценарии (скрипте) присутствуют функция пропуска установки уже установленных пакетов! ${NC}"
echo -e "${CYAN}:: ${NC}Вы МОЖЕТЕ в скрипте закомментировать НЕнужные вам пакеты!"
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. " 
# Be careful! The installation process was fully automatic
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again... 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_gimp  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_gimp" =~ [^10] ]]
do
    :
done
if [[ $in_gimp == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_gimp == 1 ]]; then
  echo ""
  echo " Установка GIMP "
sudo pacman -Syy  # обновление баз пакмэна (pacman)  
sudo pacman -S --noconfirm --needed gimp  # Программа обработки изображений GNU ; https://wiki.archlinux.org/title/GIMP
sudo pacman -S --noconfirm --needed gimp-help-en --noconfirm  # Английские файлы справки для GIMP 
sudo pacman -S --noconfirm --needed gimp-help-ru --noconfirm  # Русские файлы справки для GIMP
sudo pacman -S --noconfirm --needed gimp-plugin-gmic --noconfirm  # Плагин Gimp для фреймворка обработки изображений G'MIC ; https://archlinux.org/packages/extra/x86_64/gimp-plugin-gmic/ ; https://docs.gimp.org/en/gimp-scripting.html
sudo pacman -S --noconfirm --needed xsane  # Интерфейс X11 на базе GTK для SANE и плагин для Gimp ; https://gitlab.com/sane-project/frontend/xsane ; https://archlinux.org/packages/extra/x86_64/xsane/
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Pinta (для рисования / редактирования по образцу Paint.NET)?"
echo -e "${MAGENTA}:: ${BOLD}Pinta - это бесплатная программа с открытым исходным кодом для рисования и редактирования изображений. ${NC}"
echo " Его цель — предоставить пользователям простой, но мощный способ рисования и обработки изображений на Linux, Mac, Windows и *BSD (https://www.pinta-project.com/ ; https://github.com/PintaProject/Pinta). "
echo " Pinta — это GTK-клон Paint.Net 3.0. Оригинальный код Pinta лицензирован по лицензии MIT: см. license-mit.txtлицензию MIT. Код Paint.Net 3.36 используется по лицензии MIT и сохраняет оригинальные заголовки в исходных файлах. "
echo -e "${CYAN}=> ${BOLD}В сценарии (скрипте) присутствуют функция пропуска установки уже установленных пакетов! ${NC}"
echo -e "${CYAN}:: ${NC}Вы МОЖЕТЕ в скрипте закомментировать НЕнужные вам пакеты!"
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. " 
# Be careful! The installation process was fully automatic
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again... 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_pinta  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_pinta" =~ [^10] ]]
do
    :
done
if [[ $in_pinta == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_pinta == 1 ]]; then
  echo ""
  echo " Установка Pinta "
sudo pacman -S --noconfirm --needed pinta  # Программа для рисования / редактирования по образцу Paint.NET. Его цель - предоставить упрощенную альтернативу GIMP для обычных пользователей ; https://www.pinta-project.com/ ; https://github.com/PintaProject/Pinta
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Krita (Продвинутый графический редактор)?"
echo -e "${MAGENTA}:: ${BOLD}Krita - это бесплатный растровый графический редактор с массой возможностей. Широкая функциональность редактора позволяет использовать его как для обработки фотографий, так и для рисования. ${NC}"
echo " Интуитивно понятный пользовательский интерфейс, который не мешает. Докеры и панели можно перемещать и настраивать под ваш рабочий процесс. После настройки вы можете сохранить ее как свое рабочее пространство. Вы также можете создавать собственные ярлыки для часто используемых инструментов. Настраиваемый макет. Более 30 докеров для дополнительной функциональности. Темные и светлые цветовые темы. "
echo " Домашняя страница: https://krita.org/ ; (https://krita.org/en/features/ ; https://archlinux.org/packages/extra/x86_64/krita/). " 
echo " Krita — Некоторые возможности программы: Поддержка цветовых пространств RGB, CMYK, Lab и Grayscale. Поддержка слоев, масок, каналов. Множество фильтров с просмотром результата в реальном времени. Множество кистей для художников (с настройкой параметров). Импорт новых кистей. Стабилизация при рисовании кистью (если дрожат руки). Создание текстур (размножение объектов на холсте). Псевдо-бесконечный холст, который не имеет размеров. Настраиваемое всплывающее меню быстрого доступа. Настраиваемые горячие клавиши. Открытие и сохранение файлов в формате PSD. И многое другое... "
echo " Программа очень отзывчивая, многие операции выполняются моментально, задержки сведены к минимуму. Для некоторых ресурсозатратных операций используется OpenGL. Внешний вид редактора напомнил мне Photoshop и это явный плюс. Интерфейс выполнен очень аккуратно, все диалоги и элементы находятся на своих местах, компактно и продуманно. Если сравнить его с GIMP, то Krita мне понравился больше (Лучший аналог фотошопа). "
echo -e "${MAGENTA}:: ${BOLD}Изначально Krita был частью офисного пакета Calligra Suite (ранее KOffice), который входил в проект KDE. В 2015 году Krita отделился от Calligra и стал развиваться независимо, это дало сильный толчок в развитии программы. ${NC}"
echo -e "${CYAN}=> ${BOLD}В сценарии (скрипте) присутствуют функция пропуска установки уже установленных пакетов! ${NC}"
echo -e "${CYAN}:: ${NC}Вы МОЖЕТЕ в скрипте закомментировать НЕнужные вам пакеты!"
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. " 
# Be careful! The installation process was fully automatic
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again... 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_krita  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_krita" =~ [^10] ]]
do
    :
done
if [[ $in_krita == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_krita == 1 ]]; then
  echo ""
  echo " Установка Krita "
sudo pacman -Syy  # обновление баз пакмэна (pacman)  
sudo pacman -S --noconfirm --needed krita  # Редактировать и раскрашивать изображения ; https://krita.org/ ; https://archlinux.org/packages/extra/x86_64/krita/
############ Плагины ##############
sudo pacman -S --noconfirm --needed krita-plugin-gmic  # Плагин GMic для Krita ; https://github.com/amyspark/gmic ; https://archlinux.org/packages/extra/x86_64/krita-plugin-gmic/ 
sudo pacman -S --noconfirm --needed kseexpr  # Встраиваемый механизм оценки выражений (ответвление Krita) ; https://krita.org/ ; https://archlinux.org/packages/extra/x86_64/kseexpr/
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Inkscape (редактор векторной графики)?"
echo -e "${MAGENTA}:: ${BOLD}Inkscape - это бесплатный векторный графический редактор с открытым исходным кодом для GNU/Linux, Windows и macOS. Он предлагает богатый набор функций и широко используется как для художественных, так и для технических иллюстраций, таких как мультфильмы, клипарты, логотипы, типографика, диаграммы и блок-схемы. Он использует векторную графику для обеспечения четких распечаток и визуализаций с неограниченным разрешением и не привязан к фиксированному количеству пикселей, как растровая графика. Inkscape использует стандартизированный формат файла SVG в качестве основного формата, который поддерживается многими другими приложениями, включая веб-браузеры. Язык интерфейса: русский, английский и другие... Лицензия: GNU GPL v2. ${NC}"
echo " Домашняя страница: https://inkscape.org/ ; (https://archlinux.org/packages/extra/x86_64/inkscape/). "  
echo -e "${MAGENTA}:: ${BOLD}Описание: Он может импортировать и экспортировать различные форматы файлов, включая SVG, AI, EPS, PDF, PS и PNG. Он имеет полный набор функций, простой интерфейс, многоязычную поддержку и разработан с возможностью расширения; пользователи могут настраивать функциональность Inkscape с помощью дополнений. ${NC}" 
echo " Основные особенности и возможности: Позволяет создавать векторную графику различной степени сложности. Поддержка всех основных векторных примитивов. Большие возможности по редактированию векторной графики. Поддержка древовидных слоев. Работа с кривыми. Полная поддержка SVG. Использование SVG в качестве основного формата. "
echo " Поддержка экспорта в форматы: PNG, OpenDocument Drawing, DXF, sk1, PDF, EPS, PostScript. Поддержка опций командной строки для экспорта и конвертации. И многое другое... "
echo " Кто создает Inkscape? Inkscape имеет много авторов, каждый автор сохраняет свои собственные авторские права, и авторы также участвуют в определении технических и проектных целей Inkscape. Есть также много других некодирующих участников, которые считаются важными частями проекта Inkscape. "
echo " Независимо от того, являетесь ли вы иллюстратором, дизайнером, веб-дизайнером или просто тем, кому нужно создавать векторные изображения, Inkscape — это то, что вам нужно! "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_inkscape  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_inkscape" =~ [^10] ]]
do
    :
done
if [[ $in_inkscape == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_inkscape == 1 ]]; then
  echo ""
  echo " Установка Inkscape "
sudo pacman -Syy  # обновление баз пакмэна (pacman)  
sudo pacman -S --noconfirm --needed inkscape  # Профессиональный векторный графический редактор ; https://inkscape.org/ ; https://archlinux.org/packages/extra/x86_64/inkscape/ ; 
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
######################## Справка ###################
### Inkscape является членом Software Freedom Conservancy , некоммерческой организации US 501(c)(3). Взносы в Inkscape подлежат налоговому вычету в Соединенных Штатах.
##############################

clear
echo -e "${MAGENTA}
  <<< Установка программ 3D моделирования (создание 3D анимации и рендеренга). Редакторы трехмерной графики >>> ${NC}"
# Installing 3D modeling programs on Linux. Programs for creating 3D animation and rendering. 3D Graphics Editors 
#clear
echo ""
echo -e "${BLUE}:: ${NC}Установить FreeCAD (САПР, 3D геометрическое моделирование)?"
echo -e "${MAGENTA}:: ${BOLD}FreeCAD - это бесплатная САПР, программа для трехмерного геометрического моделирования. Предназначена для создания параметрических объемных объектов различной сложности. Параметрическое моделирование позволяет вам легко изменять свой дизайн, возвращаясь к истории модели и изменяя ее параметры. Язык интерфейса: русский, английский и другие... Лицензия: GNU GPL. ${NC}"
echo " Домашняя страница: https://www.freecad.org/ ; (https://archlinux.org/packages/extra/x86_64/freecad/). "  
echo -e "${MAGENTA}:: ${BOLD}Описание: FreeCAD позволяет создавать параметрические 3D объекты реального мира. Программу можно применять для моделирования в таких областях, как архитектура, машиностроение, промышленный дизайн и других. "
echo " FreeCAD позволяет вам делать наброски геометрически ограниченных 2D-форм и использовать их в качестве основы для построения других объектов. Он содержит множество компонентов для корректировки размеров или извлечения деталей дизайна из 3D-моделей для создания высококачественных готовых к производству чертежей. ${NC}" 
echo " Основные особенности и возможности: Разработка 3D моделей различной степени сложности. Параметрическое 3D моделирование. Архитектурное моделирование. Создание двумерных эскизов. Создание двухмерных эскизов из трехмерных моделей. Получение высококачественных чертежей, готовых для производства. Большой набор инструментов для создания объектов. Большой набор готовых примитивов. Применение графических фильтров. Расстановка размеров объектов. Инструменты для выполнения моделирования и симуляции. Моделирование роботов. Поддержка большого числа форматов. Импорт и экспорт: STEP, IGES, STL, SVG, DXF, OBJ, IFC, DAE и другие. Настраиваемый интерфейс программы, поддерживающий концепцию профилей. Поддержка скриптов. Модульная архитектура программы. И многое другое. "
echo " FreeCAD обладает огромным количеством возможностей. Входной порог относительно низкий, программой смогут пользоваться не только профессионалы, но и менее опытные пользователи, например, студенты и преподаватели. К тому же, в интернете доступно множество руководств и видео-уроков по FreeCAD. "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_freecad  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_freecad" =~ [^10] ]]
do
    :
done
if [[ $in_freecad == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_freecad == 1 ]]; then
  echo ""
  echo " Установка FreeCAD "
sudo pacman -Syy  # обновление баз пакмэна (pacman)  
sudo pacman -S --noconfirm --needed freecad  # Параметрический 3D CAD-моделировщик на основе функций ; https://www.freecad.org/ ; (https://archlinux.org/packages/extra/x86_64/freecad/)
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить LibreCAD (для создания 2D-чертежей САПР - геометрическое моделирование)?"
echo -e "${MAGENTA}:: ${BOLD}LibreCAD - это LibreCAD — это многофункциональное и зрелое приложение 2D-CAD, обладающее рядом действительно значительных преимуществ. Пользовательский интерфейс переведен на более чем 30 языков. Язык интерфейса: русский, английский и другие... Лицензия: GNU GPL.${NC}"
echo " Домашняя страница: https://www.librecad.org/ ; (https://github.com/LibreCAD/LibreCAD ; https://archlinux.org/packages/extra/x86_64/librecad/). "  
echo -e "${MAGENTA}:: ${BOLD}Описание: LibreCAD использует кроссплатформенную структуру Qt , что означает, что он работает с большинством операционных систем. LibreCAD - это бесплатное приложение САПР с открытым исходным кодом для Windows, Apple и Linux. Поддержка и документация бесплатны благодаря нашему большому преданному сообществу пользователей, участников и разработчиков. ${NC}" 
echo " Основные особенности и возможности: LibreCAD можно использовать как конвертер dxf в pdf, png или svg. Например, чтобы преобразовать foo.dxf в foo.pdf, foo.png или foo.svg (librecad dxf2pdf foo.dxf ; librecad dxf2png foo.dxf ; librecad dxf2svg foo.dxf). "
echo " Основная ветвь представляет собой последний предварительный код и теперь требует Qt 6.4.0 или более новую версию. Ветка 2.2.1 требует Qt 5.15.0 или более новую версию. Ветка 2.2 требует Qt 5.2.1 или более новую версию. Ветка 2.1 будет последней, поддерживающей Qt4. Ветка 2.0 будет последней, поддерживающей панель инструментов QCAD. "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_librecad  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_librecad" =~ [^10] ]]
do
    :
done
if [[ $in_librecad == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_librecad == 1 ]]; then
  echo ""
  echo " Установка LibreCAD "
sudo pacman -Syy  # обновление баз пакмэна (pacman)  
sudo pacman -S --noconfirm --needed librecad  # Инструмент для создания 2D-чертежей САПР на основе общедоступной версии QCad ; https://www.librecad.org/ ; https://archlinux.org/packages/extra/x86_64/librecad/
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Sweet Home 3D (sweethome3d) - Дизайн интерьера?"
echo -e "${MAGENTA}:: ${BOLD}Sweet Home 3D — бесплатная программа для моделирования дизайна интерьера. Программа позволяет создать план помещения, квартиры, комнаты, расставить мебель, двери, окна, батареи, шторы и многое многое другое и просмотреть результаты в 3D. ${NC}"
echo " Домашняя страница: http://www.sweethome3d.com/ ; (https://archlinux.org/packages/extra/x86_64/sweethome3d/). "  
echo -e "${MAGENTA}:: ${BOLD}Sweet Home 3D, программа для создания плана будь то квартира, отдельное помещение, и т.д, где можно расположить начиная от пола до потолка, а также не забыть про интерьер (мебель, двери, окна и даже светильники, жалюзи). Но это не просто создание двухмерного плана, все добавляемые объекты могут вращаться, быть объемными, т. е. Создание Трехмерного плана Вашего замысла. А ее бесплатность — это что-то с нечто. Такого больше не сыщешь... ${NC}"
echo " Возможности: Добавление стен: прямые, округлые, наклонные. Добавление окон и дверей. Добавление мебели. Добавление мебели. Изменение цвета объектов, поддержка текстур. Изменение толщины. Создание интерьера в 2D. Просмотр интерьера в 3D. Добавление в план текстовых меток, размеров, стрелок. Настройка освещения помещений. Импорт черчежей помещений и использование их как подложки для рисования плана. Экспорт в различные форматы включая obj-формат. Поддержка плагинов. Поддержка импорта дополнительных трехмерных объектов интерьера в различных форматах. В интернете можно скачать дополнительные каталоги объектов. Исходный код: Open Source (открыт); Языки программирования: Java; Лицензия: GNU GPL; Кроссплатформенность; Приложение переведено на русский язык. Простая в использовании, справка на русском и богатство видеоматериалов." 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_sweethome3d  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_sweethome3d" =~ [^10] ]]
do
    :
done
if [[ $in_sweethome3d == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_sweethome3d == 1 ]]; then
  echo ""
  echo " Установка  "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed sweethome3d  # Приложение для дизайна интерьера, позволяющее нарисовать план вашего дома в 3D-среде ; http://www.sweethome3d.com/ ; https://archlinux.org/packages/extra/x86_64/sweethome3d/ ; 3 июня 2024 г., 15:44 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
 
clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Blender (blender) - Программа 3D моделирования?"
echo -e "${MAGENTA}:: ${BOLD}Blender — очень мощная бесплатная программа для трехмерного моделирования под Linux. С помощью Blender можно создавать 3D объекты и сцены любой сложности, анимацию, рендеринг, обрабатывать видео, создавать объекты и логику к играм. Blender является профессиональной программой для создания трехмерной анимации. Позволяет создавать видео-анимацию полного цикла. В Blender можно использовать скрипты на языке Python для написания логики к играм, создания инструментов и сценариев. Организация Blender Foundation периодически выпускает короткометражные мультфильмы, которые создаются в Blender и с использованием другого свободного программного обеспечения. ${NC}"
echo " Домашняя страница: http://www.blender.org/ ; (https://archlinux.org/packages/extra/x86_64/blender/). "  
echo -e "${MAGENTA}:: ${BOLD}Blender бесплатное и открытое приложение. Его можно скачать на официальной странице. Программа работает на Linux, macOS и MS Windows. Причем интерфейс отрисовывается через OpenGL, поэтому он одинаковый на всех платформах. Блендер не занимает много места на компьютере. У программы низкие системные требования. Еще ее можно использовать в портативном режиме: чтобы работать, не нужно устанавливать редактор на устройство. Блендер многофункциональный. Это кроссплатформенный интерфейс с графическим интерфейсом OpenGL, который един для всех основных платформ (и настраивается с помощью скриптов Python). OpenGL — это библиотека для создания графики. OpenGL переводится как открытая графическая библиотека. ${NC}"
echo " Он подходит для разных задач: Моделирование; Визуализация; Анимация; Редактирование видео; Создание визуальных эффектов; Риггинг: анимирование персонажей, существ, объектов; Рендеринг: проработка текстур в играх и видео; Создание игр. Высококачественная 3D-архитектура, обеспечивающая быстрый и эффективный рабочий процесс. Он может похвастаться активной поддержкой сообщества. См. blender.org/community для получения обширного списка сайтов. Важной особенностью программы является ее малый размер. Blender может работать на большом количестве операционных систем, среди них, Linux, Windows, MacOS, Solaris, Irix и другие. Исходный код: Open Source (открыт); Лицензия: GNU GPL; Приложение переведено на русский язык. " 
echo -e "${CYAN}:: ${NC}Установка Blender (blender-bin) и (blender-git) проходит через сборку из AUR (yay). Если хотите можете собрать пакет через - git clone, PKGBUILD, makepkg - эта функция тоже прописана в сценарии скрипта, НО # закомментирована! "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Установить Blender (blender),    2 - Установить Blender (blender-bin),    3 - Установить Blender (blender-git),

    0 - НЕТ - Пропустить установку: " in_blender  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_blender" =~ [^1230] ]]
do
    :
done
if [[ $in_blender == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_blender == 1 ]]; then
  echo ""
  echo " Установка Blender (blender) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed blender  # Полностью интегрированный пакет для создания 3D-графики ; https://www.blender.org/ ; https://archlinux.org/packages/extra/x86_64/blender/ ; 3 августа 2024 г., 8:14 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
elif [[ $in_blender == 2 ]]; then
  echo ""
  echo " Установка Blender (blender-bin) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
########## blender-bin ##############
yay -S blender-bin --noconfirm  # Полностью интегрированный пакет для создания 3D-графики (с упакованными библиотеками и python3.11) ; https://aur.archlinux.org/blender-bin.git (только для чтения, нажмите, чтобы скопировать) ; https://blender.org/ ; https://aur.archlinux.org/packages/blender-bin ; Конфликты: с blender ; 2024-07-31 06:36 (UTC) ; https://download.blender.org/release/Blender4.2/blender-4.2.0-linux-x64.tar.xz ; Этот пакет поставляется с собственным набором библиотек, которые он будет предпочитать системным библиотекам, что является основной причиной этого пакета. Кроме того, он поставляется с python3.11, который является официальной версией, которую blender все еще использует в upstream. 
#git clone https://aur.archlinux.org/blender-bin.git   # (только для чтения, нажмите, чтобы скопировать)
#cd blender-bin
# makepkg -fsri
# makepkg -si
#makepkg -si --noconfirm   #--не спрашивать каких-либо подтверждений
# makepkg -si --skipinteg
#pwd    # покажет в какой директории мы находимся
#cd ..   # поднимаемся на уровень выше (выходим из папки сборки)
# rm -rf blender-bin 
#rm -Rf blender-bin
echo ""
echo " Установка утилит (пакетов) выполнена "
elif [[ $in_blender == 3 ]]; then
  echo ""
  echo " Установка Blender (blender-git) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
########## blender-git ##############
sudo pacman -S --noconfirm --needed git-lfs  # Расширение Git для управления версиями больших файлов ; https://git-lfs.github.com/ ; https://archlinux.org/packages/extra/x86_64/git-lfs/ ; 13 марта 2024 г., 16:35 UTC ; Git Large File Storage (LFS) заменяет большие файлы, такие как аудиофрагменты, видео, наборы данных и графику, текстовыми указателями внутри Git, сохраняя содержимое файлов на удаленном сервере, например GitHub.com или GitHub Enterprise.
sudo pacman -S --noconfirm --needed haskell-git-lfs  # Реализация протокола git-lfs ; https://hackage.haskell.org/package/git-lfs ; https://archlinux.org/packages/extra/x86_64/haskell-git-lfs/ ; 9 августа 2024 г., 10:47 UTC
yay -S blender-git --noconfirm  # Полностью интегрированный пакет для создания 3D-графики (разработка) ; https://aur.archlinux.org/blender-git.git (только для чтения, нажмите, чтобы скопировать) ; https://blender.org/ ; https://aur.archlinux.org/packages/blender-git ; Конфликты: с blender, blender-4.1-bin
#git clone https://aur.archlinux.org/blender-git.git   # (только для чтения, нажмите, чтобы скопировать)
#cd blender-git
# makepkg -sri
# makepkg -fsri
# makepkg -si
#makepkg -si --noconfirm   #--не спрашивать каких-либо подтверждений
# makepkg -si --skipinteg
#pwd    # покажет в какой директории мы находимся
#cd ..   # поднимаемся на уровень выше (выходим из папки сборки)
# rm -rf blender-git 
#rm -Rf blender-git
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
########## Справка и Дополнения ############
# http://www.blender.org/
# https://archlinux.org/packages/extra/x86_64/blender/
# https://wiki.archlinux.org/title/Blender
# https://aur.archlinux.org/packages?O=0&K=blender
# В источнике приведены следующие рекомендации по запуску Blender на Arch Linux:
# Выполните обновление системы через sudo pacman -Syu.
# Запустите Blender через sudo.
# Попробуйте понизить версию Python, так как 3.11 ещё не все пакеты поддерживает.
# Поместите путь к Python в переменную окружения.
######## ДОПОЛНЕНИЯ И ПЛАГИНЫ ############ https://aur.archlinux.org/packages?O=0&K=blender
########## blender-breezedark-theme-git ##############
# yay -S blender-breezedark-theme-git --noconfirm  # Тема Blender, имитирующая цветовую схему темы Breeze Dark KDE ; https://aur.archlinux.org/blender-breezedark-theme-git.git (только для чтения, нажмите, чтобы скопировать) ; https://codeberg.org/Nesakko/blender-breezedark-theme ; https://aur.archlinux.org/packages/blender-breezedark-theme-git ; Конфликты: с blender-breezedark-theme ; 2024-07-31 07:43 (UTC)
######## blender-plugin-supertuxkart-git #############
# yay -S blender-plugin-supertuxkart-git --noconfirm  # Специальные скрипты, помогающие создавать собственные карты и трассы SuperTuxKart ; https://aur.archlinux.org/blender-plugin-supertuxkart-git.git (только для чтения, нажмите, чтобы скопировать) ; https://github.com/supertuxkart/stk-blender ; https://aur.archlinux.org/packages/blender-plugin-supertuxkart-git ; 2023-06-12 20:26 (UTC)
######### blender-plugin-poliigon ##########
# yay -S blender-plugin-poliigon --noconfirm  # Poliigon Blender Addon предоставляет более 3000 моделей, материалов и HDRI-изображений под рукой. Поиск, загрузка и импорт не выходя из Blender ; https://aur.archlinux.org/blender-plugin-poliigon.git (только для чтения, нажмите, чтобы скопировать) ; https://www.poliigon.com/blender ; https://aur.archlinux.org/packages/blender-plugin-poliigon ; 2024-01-29 11:49 (UTC)
######### blender-plugin-yavne ##########
# yay -S blender-plugin-yavne --noconfirm  # Этот аддон Blender предоставляет набор инструментов для редактирования нормалей вершин. YAVNE может значительно улучшить визуальное качество сетки без изменения геометрии ; https://aur.archlinux.org/blender-plugin-yavne.git (только для чтения, нажмите, чтобы скопировать) ; https://github.com/fedackb/yavne ; https://aur.archlinux.org/packages/blender-plugin-yavne ; 2022-02-09 14:26 (UTC)
########### blendnet ###########
# yay -S blendnet --noconfirm  # Распространяйте свои рендеры Blender (с поддержкой CUDA CPU+GPU!) ; https://aur.archlinux.org/blendnet.git (только для чтения, нажмите, чтобы скопировать) ; https://github.com/state-of-the-art/BlendNet ; https://aur.archlinux.org/packages/blendnet ; 2022-05-27 09:26 (UTC)
######## blender-plugin-luxcorerender ##########
# yay -S blender-plugin-luxcorerender --noconfirm  # Плагин экспортера LuxCoreRender для Blender ; https://aur.archlinux.org/blender-plugin-luxcorerender.git (только для чтения, нажмите, чтобы скопировать) ; https://luxcorerender.org/ ; https://aur.archlinux.org/packages/blender-plugin-luxcorerender ; 2023-11-23 14:33 (UTC)
############# ЕСЛИ ВОЗНИКЛА ПРОБЛЕМА #############
# Blender не отображает карту AMD как устройство рендеринга OpenCL ; При использовании встроенной графики Intel выбор объекта может занять 5-10 секунд. Измените выбор в Файл > Настройки пользователя > Система на Запросы окклюзии OpenGL .
######## amdgpu-pro-installer ##########
# yay -S amdgpu-pro-installer --noconfirm  # этот пакет - наша попытка поместить amdgpu в ARCH, но это может сломаться или возникнуть проблемы, так как amd обновит и изменит свои пакеты для ubuntu ; если что-то случится, вы всегда можете скачать старый тег в https://github.com/Ashark/archlinux-amdgpu-pro/releases и получить PKGBUILD там, и использовать makepkg с этой сборкой, пока мы обновляем или пытаемся исправить :) ; https://aur.archlinux.org/amdgpu-pro-installer.git (только для чтения, нажмите, чтобы скопировать) ; https://aur.archlinux.org/pkgbase/amdgpu-pro-installer ; 2024-07-02 19:24 (UTC)
######## opencl-amd ##########
# yay -S opencl-amd --noconfirm  # Компоненты ROCm, переупакованные из релизов AMD Ubuntu (ROCr runtime, ROCm runtime, HIP runtime) — этот пакет предназначен для работы вместе с бесплатным стеком amdgpu ; https://aur.archlinux.org/opencl-amd.git (только для чтения, нажмите, чтобы скопировать) ; http://www.amd.com/ ; https://aur.archlinux.org/packages/opencl-amd ; 2024-08-02 23:48 (UTC) ; Конфликты: с rocm-gdb, rocm-hip-runtime, rocm-language-runtime, rocm-ocl-icd, rocm-opencl, rocm-opencl-dev, rocm-opencl-icd-loader, rocm-opencl-runtime, rocm-smi-lib, rocm-utils, rocminfo, rocprofiler, rocprofiler-dev, rocprofiler-plugins, rocprofiler-register, roctracer, roctracer-dev  ; Смотрите Зависимости !
#############################

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Dust3D (dust3d) - Создание 3D моделей?"
echo -e "${MAGENTA}:: ${BOLD}Dust3D — это кроссплатформенное программное обеспечение для 3D-моделирования, которое упрощает создание низкополигональных 3D-моделей для видеоигр, 3D-печати и многого другого. Она поможет вам создать водонепроницаемую 3D-модель за считанные секунды. Да, это бесплатно. И это кроссплатформенно, независимо от того, используете ли вы Windows, Linux или macOS, вы получите одинаковый опыт. ${NC}"
echo " Домашняя страница: https://dust3d.org/ ; (https://aur.archlinux.org/packages/dust3d). "  
echo -e "${MAGENTA}:: ${BOLD}Некоторые особенности и возможности Dust3D: Программа позволяет быстро создавать сложные трехмерные модели. Требует минимальных навыков для начала работы. Может применяться для создания трехмерных моделей при разработке игр, 3D печати и для других областей. Один из способов работы с программой заключается в использовании фотографии объекта (или любого другого изображения) в качестве базы для создания будущей модели. Пользователь выполняет «обводку» объекта по фотографии, формируя объемную модель. Материалы. Текстуры. Позы. Подготовка поз для будущей анимации. Предпросмотр анимации. Поддерживается экспорт в форматы FBX, glTF, OBJ. Содержит несколько готовых примеров моделей (можно открыть через меню File→Open Example). И другие. ${NC}"
echo " Интерфейс программы Dust3D выполнен в строгом стиле и не перегружен различными кнопками. В левой части размещается вертикальная панель инструментов. В верхней части расположено главное меню. Справа расположена док-панель с дополнительными диалогами, представленными в виде вкладок (Части, Материалы, Скрипты и другие). Основную часть окна программы занимает рабочая область, в которой выполняется работа с моделью. Исходный код: Open Source; Сборка: CMake; Интерфейс: Qt; Библиотеки и зависимости: CGAL (Computational Geometry Algorithms Library), Qt, Boost, Instant Meshes; Язык программирования: C++; Лицензия: MIT; Dust3D распространяется по лицензии MIT — подробности см. в файле LICENSE (https://github.com/huxingyi/dust3d/blob/master/LICENSE). Программа кроссплатформенная Работает в Linux, MacOS, Windows. " 
echo -e "${CYAN}:: ${NC}Установка Dust3D (dust3d) проходит через сборку из AUR (yay). Если хотите можете собрать пакет через - git clone, PKGBUILD, makepkg - эта функция тоже прописана в сценарии скрипта, НО # закомментирована! "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_dust3d  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_dust3d" =~ [^10] ]]
do
    :
done
if [[ $in_dust3d == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_dust3d == 1 ]]; then
  echo ""
  echo " Установка Dust3D (dust3d) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
########### dust3d ############
yay -S dust3d --noconfirm  # Программное обеспечение для 3D-моделирования водонепроницаемости ; https://aur.archlinux.org/dust3d.git (только для чтения, нажмите, чтобы скопировать) ; https://dust3d.org/ ; https://aur.archlinux.org/packages/dust3d ; 2023-08-12 11:11 (UTC) 
#git clone https://aur.archlinux.org/dust3d.git   # (только для чтения, нажмите, чтобы скопировать)
#cd dust3d
# makepkg -fsri
# makepkg -si
#makepkg -si --noconfirm   #--не спрашивать каких-либо подтверждений
# makepkg -si --skipinteg
#pwd    # покажет в какой директории мы находимся
#cd ..   # поднимаемся на уровень выше (выходим из папки сборки)
# rm -rf dust3d 
#rm -Rf dust3d
########### dust3d-git ############
# sudo pacman -Syy  # обновление баз пакмэна (pacman)
# yay -S dust3d-git --noconfirm  # Программное обеспечение для 3D-моделирования водонепроницаемости (версия git) ; https://aur.archlinux.org/dust3d-git.git (только для чтения, нажмите, чтобы скопировать) ; https://dust3d.org/ ; https://aur.archlinux.org/packages/dust3d-git ; git+https://github.com/huxingyi/dust3d ; 2023-03-02 21:27 (UTC) ; Конфликты: с dust3d
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
######### Справка и Дополнения ############
# Dust3D - Создание 3D моделей
# https://dust3d.org/
# https://aur.archlinux.org/packages/dust3d
# Чтобы исправить проблемы времени {сборки, выполнения} в Qt 5.15.0, добавьте в функцию prepare():
# sed -i '1s/^/#include <QPainterPath>\n/' "${srcdir}/${pkgname}-${_pkgver}/src/contourtopartconverter.cpp"
# Спасибо, добавил патч в сборку, который добавляет это включение
# cstdint.patch
# https://aur.archlinux.org/cgit/aur.git/tree/cstdint.patch?h=dust3d
##### Установка и запуск в Linux: ############
# Для запуска Dust3D в Linux предлагается готовый AppImage файл, формируемый разработчиками программы. AppImage файлы не требуют установки (https://pingvinus.ru/note/appimage).
# После скачивания AppImage файла необходимо сделать его исполняемым, для этого можно выполнить команду:
# chmod a+x ./dust3d-1.0.0-rc.6.AppImage
# Затем запустить программу, выполнив:
# ./dust3d-1.0.0-rc.6.AppImage
################################

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить gCAD3D (gcad3d-bin) - Система автоматизированного проектирования?"
echo -e "${MAGENTA}:: ${BOLD}gCAD3D — программа для автоматизированного проектирования — 3D CAD-CAM. Позволяет создавать 3D объекты различной степени сложности и получать их 3D визуализацию. Вместе с gCAD3D устанавливаются несколько тестовых моделей, которые вы можете использовать для изучения программы и ее возможностей. ${NC}"
echo " Домашняя страница: https://www.gcad3d.org/ ; (https://aur.archlinux.org/packages/gcad3d-bin). "  
echo -e "${MAGENTA}:: ${BOLD}Программа включает быстрый 3D просмотрщик, который использует библиотеку OpenGL. OpenGL — это библиотека для создания графики. OpenGL переводится как открытая графическая библиотека. К сожалению, gCAD3D не переведена на русский язык. С программой поставляется полноценная, хотя и краткая, документация в HTML формате на английском языке. ${NC}"
echo " gCAD3D имеет свой собственный интегрированный просмотрщик 3D-OpenGL, программы импорта и экспорта (Step, Iges, VRML, DXF, SVG ..), программный интерпретатор для геометрии и команд ЧПУ в 3D, интегрированный процессор ЧПУ. Программный интерфейс для пользовательских программ (плагинов); программный интерфейс для RemoteControl; доступно для MS-Windows (32-бит), Linux (64 и 32-бит). Программу можно запустить из командной строки gCAD3D можно запустить, выполнив: gcad3d " 
echo -e "${CYAN}:: ${NC}Установка gCAD3D (gcad3d-bin) проходит через сборку из AUR (yay). Если хотите можете собрать пакет через - git clone, PKGBUILD, makepkg - эта функция тоже прописана в сценарии скрипта, НО # закомментирована! "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_gcad3d  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_gcad3d" =~ [^10] ]]
do
    :
done
if [[ $in_gcad3d == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_gcad3d == 1 ]]; then
  echo ""
  echo " Установка gCAD3D (gcad3d-bin) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
######## Зависимости ##########
yay -S gtkglarea --noconfirm  # Библиотеки областей GTK/GL ; https://aur.archlinux.org/gtkglarea.git (только для чтения, нажмите, чтобы скопировать) ; https://mono-project.com/GtkGLArea ; https://aur.archlinux.org/packages/gtkglarea ; 2022-01-22 16:08 (UTC)
######## gcad3d-bin ###########
yay -S gcad3d-bin --noconfirm  # Параметрический 3D CAD с просмотрщиком, импортом, экспортом, ЧПУ ; https://aur.archlinux.org/gcad3d-bin.git (только для чтения, нажмите, чтобы скопировать) ; https://www.gcad3d.org/ ; https://aur.archlinux.org/packages/gcad3d-bin ; 2024-07-25 04:25 (UTC) ; Конфликты: с gcad3d
#git clone https://aur.archlinux.org/gcad3d-bin.git   # (только для чтения, нажмите, чтобы скопировать)
#cd gcad3d-bin
# makepkg -fsri
# makepkg -si
#makepkg -si --noconfirm   #--не спрашивать каких-либо подтверждений
# makepkg -si --skipinteg
#pwd    # покажет в какой директории мы находимся
#cd ..   # поднимаемся на уровень выше (выходим из папки сборки)
# rm -rf gcad3d-bin
#rm -Rf gcad3d-bin
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Synfig Studio (synfigstudio) - Векторная анимация?"
echo -e "${MAGENTA}:: ${BOLD}Synfig Studio — это бесплатное программное обеспечение для 2D-анимации с открытым исходным кодом, разработанное как мощный инструмент для создания анимации с использованием векторной и растровой графики. Synfig устраняет необходимость  рисовать анимацию «по кадрам», что значительно снижает затраты ресурсов на создание мультфильмов. ${NC}"
echo " Домашняя страница: https://www.synfig.org/ ; ( https://synfig.ru/ ; https://archlinux.org/packages/extra/x86_64/synfigstudio/). "  
echo -e "${MAGENTA}:: ${BOLD}Интерфейс Synfig Studio смотрится вполне профессионально. Он чем-то напоминает интерфейс редактора GIMP. В главном окне представлено изображение (сцена), а остальные окна являются дополнительными функциональными панелями (панель инструментов, слои, параметры, навигатор и так далее). Вся работа в Synfig Studio ведется с векторными объектами. Это позволяет увеличивать изображение без потери качества. Растровые изображения используются только, если вы импортируете готовые растровые файлы. В Synfig Studio представлено несколько готовых инструментов для создания различных анимационных эффектов. Примеры анимационных роликов, выполненных в Synfig Studio, можно найти на сайте проекта (https://www.synfig.org/). На сайте программы можно найти примеры в формате sifz (формат файлов Synfig Studio). Примеры автоматически установились в директорию /usr/share/doc/synfig-examples/examples . Готовые видео можно экспортировать в форматы AVI, MPEG и другие. Можно также сохранить кадры в PNG, BMP. ${NC}"
echo " Synfig — это бесплатное программное обеспечение с открытым исходным кодом, лицензированное под лицензией GNU GPL v3. Исходный код доступен на GitHub (https://github.com/synfig/synfig/). Synfig Studio доступна для Linux, Windows и MacOS X. Доступны 32-х и 64-х битные сборки. Программа Synfig Studio переведена на русский язык. Также доступна документация на русском языке (частично). ✅ *Обучающий видео-курс: ( https://morevna-school.ru/programma/synfig/ ) " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_synfigstudio  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_synfigstudio" =~ [^10] ]]
do
    :
done
if [[ $in_synfigstudio == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_synfigstudio == 1 ]]; then
  echo ""
  echo " Установка Synfig Studio (synfigstudio) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed synfigstudio  # Профессиональная программа векторной анимации (GUI) ; https://www.synfig.org/ ; https://archlinux.org/packages/extra/x86_64/synfigstudio/ ; https://github.com/synfig/synfig/ ; https://synfig.ru/ ; 8 июня 2024 г., 18:31 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo -e "${CYAN}
  <<< Установка программ для выбора Палитры цвета для системы Arch Linux >>> ${NC}"
# Installing programs to select a color palette for the Arch Linux system
#clear
echo ""
echo -e "${BLUE}:: ${NC}Установить KColorChooser (kcolorchooser) - Палитра для выбора цвета?"
echo -e "${MAGENTA}:: ${BOLD}KColorChooser — утилита для выбора цвета и составления палитры цветов. KColorChooser — это инструмент цветовой палитры, используемый для смешивания цветов и создания пользовательских цветовых палитр. Приложение позволяет получить цвет любого пикселя. Приложение поддерживает основные цветовые палитры, такие как стандартные веб-цвета и цветовая схема Oxygen. ${NC}"
echo " Домашняя страница: https://apps.kde.org/kcolorchooser/ ; (https://apps.kde.org/ru/kcolorchooser ; https://archlinux.org/packages/kde-unstable/x86_64/kcolorchooser/). "  
echo -e "${MAGENTA}:: ${BOLD}Основные возможности и особенности утилиты KColorChooser: Классический внешний вид диалога выбора цвета, использующийся в различных средах. Получение цвета с рабочего стола (инструмент «пипетка» — Pick Screen Color) — получение цвета любого пикселя на экране. Предустановленная палитра базовых цветов (Web colors). Градиентная палитра (Oxygen color scheme) с ползунком изменения яркости. Отображение цвета в форматах: Hue/Sat/Val; RGB; HTML/HEX;Сохранение цветов в пользовательскую палитру. ${NC}"
echo " Разрабатывается в рамках проекта: KDE; Исходный код: Open Source (открыт); Языки программирования: C++; Библиотеки: Qt; Бесплатная и с открытым исходным кодом программа. " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_kcolorchooser  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_kcolorchooser" =~ [^10] ]]
do
    :
done
if [[ $in_kcolorchooser == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_kcolorchooser == 1 ]]; then
  echo ""
  echo " Установка KColorChooser (kcolorchooser) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed kcolorchooser  # Выбор цвета ; https://apps.kde.org/kcolorchooser/ ; https://apps.kde.org/ru/kcolorchooser ; https://archlinux.org/packages/kde-unstable/x86_64/kcolorchooser/ ; Aug. 15, 2024, 8:58 p.m. UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Gcolor3 (Color Picer) (gcolor3) - Простой инструмент выбора цвета?"
echo -e "${MAGENTA}:: ${BOLD}Gcolor3 — это диалоговое окно (селектор и пикер) выбора цвета, написанное на GTK+ 3 для Linux. Оно во многом похоже на Gcolor2 , но использует более новую версию GTK+ и другие модернизации для лучшей интеграции в ваш современный рабочий стол. Gcolor3 позволяет вам выбирать цвет из любого пикселя на экране. Он также предлагает палитру, так что вы можете легко смешивать и сочетать несколько цветов вместе. С выпуском версии 2.4.0 Gcolor3 теперь называется « Color Picker » с новым сопровождающим, новой иконкой, множеством новых улучшений и множеством обновлений переводов. ${NC}"
echo " Домашняя страница: https://www.hjdskes.nl/projects/gcolor3/ ; (https://archlinux.org/packages/extra/x86_64/gcolor3/). "  
echo -e "${MAGENTA}:: ${BOLD}Вы когда-нибудь хотели узнать значение этого цвета на вашем экране? Gcolor3 позволяет вам выбрать цвет из любого пикселя на вашем экране. Он также предлагает палитру, так что вы можете легко смешивать и сочетать несколько цветов вместе. Когда вы нашли идеальное сочетание цветов, естественно, вы хотите их сохранить. Gcolor3 позволяет вам удобно сохранять и извлекать цвета. ${NC}"
echo " Есть возможность сохранять выбранные цвета (а так же удалять из сохранённых); Имеется возможность изменять: тон, насыщенность, значение, красный, зелёный, синий, прозрачность; Сохранённые цвета можно копировать в буфер обмена; Поддержка комбинаций (горячих) клавиш. " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_gcolor3  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_gcolor3" =~ [^10] ]]
do
    :
done
if [[ $in_gcolor3 == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_gcolor3 == 1 ]]; then
  echo ""
  echo " Установка Gcolor3 (Color Picer) (gcolor3) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed gcolor3  # Простой выбор цвета, написанный на GTK (с поддержкой Xorg).; https://www.hjdskes.nl/projects/gcolor3/ ; https://archlinux.org/packages/extra/x86_64/gcolor3/ ; Конфликты: с gcolor3-xorg ; 11 июля 2024 г., 21:59 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Gpick (gpick) - Программа для подбора цвета?"
echo -e "${MAGENTA}:: ${BOLD}Gpick — программа для Linux, предназначенная для подбора цветовых сочетаний, составления цветовых палитр. Программа позволяет создавать цветовые палитры, подбирать гармоничные цвета, смешивать цвета и предоставляет много других действий для работы с цветом. Gpick поддерживает экспорт цветовых палитр в форматы gpl (Inkscape / Gimp), ase, mtl, а также импорт из форматов gpl и ase. Иногда Gpick называют продвинутой пипеткой (color picker — цветоподборщик). ${NC}"
echo " Домашняя страница: http://www.gpick.org/ ; (https://archlinux.org/packages/extra/x86_64/gpick/). "  
echo -e "${MAGENTA}:: ${BOLD}Режим плавающего выбора: При желании весь графический интерфейс может состоять из одного окна, следующего за указателем мыши, и значка в области уведомлений. Этот режим оптимизирован для людей, которым нужен только базовый селектор цветов без каких-либо инструментов для настройки цвета или редактирования палитры. HTML-экспорт: Экспортированные HTML-страницы можно использовать для предварительного просмотра и обмена палитрами с людьми, которые не используют Gpick или другое программное обеспечение для редактирования палитр. Выбор выходного формата: Форматы элементов цветовой сериализации, отображения и палитры можно выбирать из ряда функций сериализации. Порядок меню копирования и доступные элементы можно контролировать, изменяя порядок функций сериализации и устанавливая соответствующие флажки. Доступ к командной строке: Аргументы командной строки позволяют использовать Gpick из других программ или скриптов. ${NC}"
echo " Основные характеристики: Управление увеличением и указателем мыши с помощью клавиатуры. Автоматическое присвоение названия цвету. Экспорт в следующие форматы: Палитра Inkscape/Gimp (*.gpl); Adobe Swatch Exchange (*.ase); Псевдоним/Материал WaveFront (*.mtl); Каскадная таблица стилей (*.css); Язык разметки гипертекста (*.html); Настраиваемый текстовый файл. Импорт из следующих форматов: Палитра Inkscape/Gimp (*.gpl); Adobe Swatch Exchange (*.ase); Настраиваемый текстовый файл. Передискретизация с пятью типами спада: Значения нескольких пикселей усредняются, чтобы помочь выбрать цвета из источников с шумом, узорами и т. д., где каждый пиксель отличается, а общий цвет создается разным количеством определенного цвета. Палитра с изображения. Инструменты создания цветовой схемы. Смешайте два или более цвета, используя различное количество шагов и различные типы смешивания. Изменения яркости и/или насыщенности. Гармоничные цвета. " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_gpick  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_gpick" =~ [^10] ]]
do
    :
done
if [[ $in_gpick == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_gpick == 1 ]]; then
  echo ""
  echo " Установка Gpick (gpick) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed gpick  # Расширенный выбор цвета, написанный на C++ с использованием инструментария GTK+ ; http://www.gpick.org/ ; https://archlinux.org/packages/extra/x86_64/gpick/ ; 5 июля 2024 г., 0:25 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo -e "${MAGENTA}
  <<< Установка Графических редакторов (для просмотра и преобразования различных форматов изображений) в Archlinux >>> ${NC}"
# Installing Image Editors (for viewing and converting various image formats) in Archlinux
#clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Converseen (converseen) - Конвертер изображений?"
echo -e "${MAGENTA}:: ${BOLD}Converseen — это бесплатный кроссплатформенный пакетный процессор (конвертер) изображений для Windows, Linux, macOS, FreeBSD и других операционных систем. Он позволяет вам конвертировать, изменять размер, вращать и переворачивать бесконечное количество изображений одним щелчком мыши. Более того, Converseen может конвертировать целый PDF- документ в набор изображений с вашими предпочтительными характеристиками. Вы можете выбрать из более чем 100+ форматов , задать размер, разрешение и имя файла. Converseen Arch имеет простой и элегантный пользовательский интерфейс, что делает его простым в использовании и навигации. ${NC}"
echo " Домашняя страница: http://converseen.fasterland.net/ ; (https://archlinux.org/packages/extra/x86_64/converseen/). "  
echo -e "${MAGENTA}:: ${BOLD}Благодаря ImageMagick , мощной библиотеке для работы с изображениями, Converseen может обрабатывать более 100 форматов изображений , включая DPX, EXR, GIF, JPEG, JPEG-2000, PNG, SVG, TIFF, WebP, HEIC/HEIF и многие другие. Converseen разработан так, чтобы быть удобным для пользователя, быстрым, практичным, он доступен бесплатно! ${NC}"
echo " Что я могу сделать с Converseen? Выполнить однократное или многократное преобразование. Измените размер одного или нескольких изображений. Сжимайте изображения для ваших веб-страниц. Поворот и переворачивание изображений. Переименуйте набор изображений, используя прогрессивный номер или префикс/суффикс. Выбор фильтра повторной выборки для изменения размера изображений. Преобразуйте весь PDF-файл в набор изображений. Извлечь изображение из файла значка Windows (*ico). Поддерживается более 100 форматов изображений. Для обработки изображений используется библиотека Magick++. Исходный код: Open Source (открыт); Языки программирования: C++; Библиотеки: Qt; Лицензия: GNU GPL; Приложение переведено на русский язык. " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_converseen  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_converseen" =~ [^10] ]]
do
    :
done
if [[ $in_converseen == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_converseen == 1 ]]; then
  echo ""
  echo " Установка Converseen (converseen) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed imagemagick  # Программа для просмотра и обработки изображений ; Его можно использовать для создания, редактирования, компоновки или преобразования растровых изображений, и он поддерживает широкий спектр форматов файлов , включая JPEG, PNG, GIF, TIFF и Ultra HDR. ; https://www.imagemagick.org/ ; https://archlinux.org/packages/extra/x86_64/imagemagick/ 
# sudo pacman -S --noconfirm --needed qt6-base  # Кроссплатформенное приложение и фреймворк пользовательского интерфейса ; https://www.qt.io/ ; https://archlinux.org/packages/extra/x86_64/qt6-base/
sudo pacman -S --noconfirm --needed converseen  # Пакетный конвертер и изменение размера изображений ; http://converseen.fasterland.net/ ; https://archlinux.org/packages/extra/x86_64/converseen/ ; April 28, 2024, 3:49 p.m. UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
 
clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Curtail (curtail) - Графический интерфейс компрессора изображений?"
echo -e "${MAGENTA}:: ${BOLD}Curtail (ранее ImCompressor) — полезный компрессор изображений, поддерживающий типы файлов PNG, JPEG, WebP и SVG. Он поддерживает режимы сжатия как без потерь, так и с потерями, с возможностью сохранять или нет метаданные изображений. ${NC}"
echo " Домашняя страница: https://apps.gnome.org/Curtail/ ; (https://archlinux.org/packages/extra/any/curtail/). "  
echo -e "${MAGENTA}:: ${BOLD}Curtail — это простое приложение с графическим интерфейсом, созданное с использованием Python и GTK3, которое использует библиотеки с открытым исходным кодом, такие как OptiPNG, jpegoptim и т. д., для реализации функции сжатия изображений. Интерфейс простой и понятный. Вы можете выбрать, хотите ли вы сжатие без потерь или с потерями. Сжатие с потерями будет иметь плохое качество изображений, но с меньшим размером. Сжатие без потерь будет иметь лучшее качество, но размер может быть не намного меньше исходного. Вы можете либо искать изображения, либо перетаскивать их в приложение. Да. С помощью Curtail можно сжимать несколько изображений за один клик. На самом деле, вам даже не нужно нажимать. Как только вы выбираете изображения или перетаскиваете их, они сжимаются, и вы видите сводку процесса сжатия. Изображения сохраняются с суффиксом -min (по умолчанию) в том же каталоге, что и исходное изображение. Хотя он выглядит минималистичным, есть несколько опций для настройки Curtail. Вы можете сделать то же самое с другими инструментами, такими как GIMP. Он просто упрощает задачу сжатия изображений, особенно для массового сжатия изображений. ${NC}"
echo " Поддерживаемые форматы изображений: PNG, JPEG и WEBP; Программа Curtail поддерживает как режимы сжатия без потерь, так и с потерями: есть возможность в настройках выставить процент потерь для каждого формата; Имеется возможность сжимать изображения с сохранением метаданных или без них; Для сжатия можно перетащить изображения или папку с изображениями в окно программы (стартовое/главное окно программы), или выбрать изображения посредством файлового менеджера; Есть возможность выбрать: сохранить сжатое изображение в новый файл или перезаписать текущий файл; Имеется возможность добавить собственный суффикс для имени нового файла; Существует возможность установить уровень сжатия для PNG и WEBP, а также использовать или нет прогрессивный кодировщик JPG; Поддержка двух тем оформления: светлая и тёмная. Информация о программе: Язык интерфейса: Русский; Разработчик: Team Curtail; Язык программирования: Python; Лицензия: GPL v3. " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_curtail  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_curtail" =~ [^10] ]]
do
    :
done
if [[ $in_curtail == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_curtail == 1 ]]; then
  echo ""
  echo " Установка Curtail (curtail) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed curtail  # Графический интерфейс компрессора изображений, поддерживающий типы файлов PNG, JPEG, WebP и SVG, режимы сжатия с потерями и без потерь ; https://apps.gnome.org/Curtail/ ; https://github.com/Huluti/Curtail ; https://archlinux.org/packages/extra/any/curtail/ ; 18 августа 2024 г., 7:24 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить XnConvert (xnconvert) - Пакетная обработка изображений?"
echo -e "${MAGENTA}:: ${BOLD}XnConvert — это быстрый, мощный и бесплатный кроссплатформенный пакетный конвертер изображений . Он позволяет автоматизировать редактирование ваших фотоколлекций: вы можете легко вращать, конвертировать и сжимать ваши изображения, фотографии и картинки, а также применять более 80 действий (таких как изменение размера , обрезка, корректировка цвета, фильтрация, ...). Поддерживает более 500 графических форматов изображений и графики (JPEG, TIFF, PNG, GIF, WebP, PSD, JPEG2000, JPEG-XL, OpenEXR, camera RAW, HEIC, PDF, DNG, CR2). Вы можете сохранять и повторно использовать ваши предустановки для другого пакетного преобразования изображений. Обладает простым и понятным интерфейсом. ${NC}"
echo " Домашняя страница: https://www.xnview.com/en/xnconvert ; (https://aur.archlinux.org/packages/xnconvert). "  
echo -e "${MAGENTA}:: ${BOLD}Доступные действия/операции с изображением: Просмотр и редактирование метаданных IPTC-IIM/XMP; Автоматическое выравнивание; Автообрезка; Виньетирование; Водяной знак; Вращение; Добавление маски; Добавление текста; Замена цвета; Извлечение канала; Изменение глубины цвета; Изменение количества точек/дюйм; Изменение размера; Изменение размера холста; Обрезка; Отражение; Преобразование ICC; Прозрачный цвет; Удаление метаданных; Усердная обрезка. Действия/операции коррекции изображений: Conbright; Gammasat; HLS; Автоконтраст; Автокоррекция уровней; Баланс белого; Выравнивание; Выравнивание гистограммы; Затенение/осветление; Кривые; Логарифмическая Lut; Насыщенность; Негатив; Нормализация; Нормализация Ex; Обесцвечивание; Постеризация; Сепия; Соляризация; Уровни; Цветовая температура; Цветовой баланс; Чёрно-белые точки; Экспозиция; Яркость/контрастность/гамма. Доступные фильтры: Восстановление фокуса; Выделение границ; Глубокое тиснение; Максимум; Минимум; Нерезкая маска; Размытие; Размытие по Гауссу; Смягчение; Среднее; Среднее на пересечении; Среднее по квадрату; Тиснение; Уменьшение шума; Усиление резкости; Усиление резкости деталей; Усиление резкости на краях; Усиление резкости фокусировки. ${NC}"
echo " Разное: 3D-рамка, волны, деформация, диапазон, добавление шума, кристаллизация, линза, масляная живопись, масляная живопись 2, мозаика, обрамление, плитка, покрытие точками, полутон, разбрызгивание, ретро, свечение, симметрия, скручивание, смещение, старая камера, фэнтези, фоторазложение, фрагментация, чересстрочная развёртка; Есть возможность сохранить действия/операции в виде скрипта, чтобы повторить манипуляции с изображением; Поддержка редактирования метаданных. Многоязычный интерфейс (включая русский язык). " 
echo -e "${CYAN}:: ${NC}Установка XnConvert (xnconvert) проходит через сборку из AUR (yay). Если хотите можете собрать пакет через - git clone, PKGBUILD, makepkg - эта функция тоже прописана в сценарии скрипта, НО # закомментирована! "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_xnconvert  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_xnconvert" =~ [^10] ]]
do
    :
done
if [[ $in_xnconvert == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_xnconvert == 1 ]]; then
  echo ""
  echo " Установка XnConvert (xnconvert) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
######### xnconvert #######
yay -S xnconvert --noconfirm  # Мощный пакетный конвертер и изменение размера изображений ; https://aur.archlinux.org/xnconvert.git (только для чтения, нажмите, чтобы скопировать) ; https://www.xnview.com/en/xnconvert ; https://aur.archlinux.org/packages/xnconvert ; https://download.xnview.com/XnConvert-linux-x64.tgz ; 2024-03-04 13:39 (UTC)
#git clone https://aur.archlinux.org/xnconvert.git   # (только для чтения, нажмите, чтобы скопировать)
#cd xnconvert
# makepkg -fsri
# makepkg -si
#makepkg -si --noconfirm   #--не спрашивать каких-либо подтверждений
# makepkg -si --skipinteg
#pwd    # покажет в какой директории мы находимся
#cd ..   # поднимаемся на уровень выше (выходим из папки сборки)
# rm -rf xnconvert 
#rm -Rf xnconvert
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
######################
# В вашем PKGBUILD измените эту строку...
# "XnConvert-linux-x64_${pkgver}.tgz::https://download.xnview.com/XnConvert-linux-x64.tgz"
# К этому...
# "XnConvert-linux-x64_${pkgver}.tgz::https://download.xnview.com/old_versions/XnConvert/XnConvert-${pkgver}-linux-x64.tgz"
####################

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить RawTherapee (rawtherapee) - Обработка RAW?"
echo -e "${MAGENTA}:: ${BOLD}RawTherapee — программа, предназначенная для обработки и конвертации RAW изображений (фотографий) в Linux. Поддерживает множество фильтров и инструментов для редактирования и обработки изображений. Действительно, есть две хорошие альтернативы Adobe Lightroom в Linux, Darktable и RawTherapee. Оба эти программного обеспечения бесплатны и имеют открытый исходный код 😃. ${NC}"
echo " Домашняя страница: http://rawtherapee.com/ ; (https://archlinux.org/packages/extra/x86_64/rawtherapee/). "  
echo -e "${MAGENTA}:: ${BOLD}В RawTherapee есть встроенный файловый менеджер изображений. Файлам можно выставлять оценки и присваивать метки — затем делать выборки по оценкам и присвоенным меткам. Есть функция пакетной обработки (конвертации). Поддерживается режим сравнения, в котором слева отображается оригинальное изображение, а справа уже обработанное. ${NC}"
echo " Возможности RawTherapee: Получите максимум детализации и минимум артефактов от ваших необработанных фотографий благодаря современным и традиционным алгоритмам демозаики: AMaZE, DCB, AHD, EAHD, HPHD, IGV, LMMSE, VNG4, Mono и Fast. Расширенная обработка цвета. Модель внешнего вида цвета CIE 2002. Улучшенные инструменты экспозиции и тональности. Несколько методов шумоподавления. Различные инструменты для улучшения деталей. Высокопроизводительная пакетная обработка: конвертируйте все проявленные изображения одновременно, не нагружая процессор. Быстрые миниатюры загружаются молниеносно. Параллельное редактирование нескольких изображений в отдельных вкладках редактора. Дополнительный вторичный дисплей. Огромное количество поддерживаемых камер. Может загружать большинство файлов RAW, включая 16-, 24- и 32-битные изображения RAW HDR DNG, а также стандартные изображения JPEG, PNG (8- и 16-битные) и TIFF (8-, 16- и 32-битные logluv). Может сохранять изображения в форматах JPEG, PNG (8- и 16-бит) и TIFF (8- и 16-бит). Расширенный контроль над алгоритмами с множеством тонких настроек параметров и кривых. Можно отправить в GIMP или другой редактор по вашему выбору одним щелчком мыши. Доступна версия для командной строки. Различные макеты: несколько вкладок, одна вкладка с кинопленкой, вертикальная вкладка с кинопленкой, два монитора. Программа понимает даже Raw от камер Fujifilm серии X, которые с матрицами X-Trans. Кроссплатформенность: доступно для Linux, Windows и OS X. Доступно на 25 языках! Исходный код: Open Source (открыт); Языки программирования: C++; Библиотеки: GTK; Лицензия: GNU GPL; Приложение переведено на русский язык. Полный список функций можно найти на этой странице вики (http://rawpedia.rawtherapee.com/Features). " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_rawtherapee  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_rawtherapee" =~ [^10] ]]
do
    :
done
if [[ $in_rawtherapee == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_rawtherapee == 1 ]]; then
  echo ""
  echo " Установка RawTherapee (rawtherapee) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed rawtherapee  # Мощная кроссплатформенная программа обработки необработанных изображений ; https://www.rawtherapee.com/ ; https://archlinux.org/packages/extra/x86_64/rawtherapee/ ; 23 мая 2024 г., 10:26 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Darktable (darktable) - Обработка RAW?"
echo -e "${MAGENTA}:: ${BOLD}Darktable — программа для обработки и каталогизации изображений. Одно из назначений программы это обработка RAW файлов, поэтому Darktable часто называют RAW конвертером. Darktable также можно применять для каталогизации изображений, то есть использовать как менеджер фотографий. ${NC}"
echo " Домашняя страница: https://darktable.org/ ; (http://www.darktable.org/ ; https://archlinux.org/packages/extra/x86_64/darktable/). "  
echo -e "${MAGENTA}:: ${BOLD}Darktable имеет три основных режима работы: В режиме Световой стол (lighttable mode) отображается коллекция фотографий (миниатюры). В режиме Обработка (darkroom mode) выполняется обработка изображения. Режим Камера предназначен для импорта фотографий с подключенного фотоаппарата. Darktable поддерживает расширенный поиск по коллекции ваших файлов. Вы также можете ставить оценки вашим фотографиям и добавлять теги. Программа имеет модульную архитектуру. Это значит, что можно подключать дополнительные модули, которые позволят расширить функционал программы до неограниченных пределов. Все, конечно, зависит от количества и качества самих модулей. Darktable имеет множество возможностей по обработке изображений, начиная от самых простых действий, до сложных эффектов. ${NC}"
echo " Достаточно высокая скорость работы, обилие функционала (в виде подключаемых модулей, лишние можно убрать, дабы не загромождать интерфейс), поддержка тегов. В общем, есть практически все. Обладает достаточно своеобразным интерфейсом, который требует привыкания. Не очень удачно реализован механизм экспорта обработанных фотографий, нет возможности выгрузки на яндекс.фотки. Поддержка аппаратного ускорения обработки формально есть. Интерфейс программы выполнен в темных тонах и смотрится довольно стильно и несколько необычно. В центре расположена рабочая зона, где отображается либо обрабатываемое изображение, либо миниатюры. Слева и справа расположены функциональные панели, которые выполнены в виде сворачивающихся вкладок (областей). В целом интерфейс показался мне удобным, но для комфортной работы нужен большой широкоформатный монитор. Огромный плюс в том, что Darktable активно развивается. Исходный код: Open Source (открыт); Языки программирования: C; Библиотеки: GEGL; GTK. " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_darktable  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_darktable" =~ [^10] ]]
do
    :
done
if [[ $in_darktable == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_darktable == 1 ]]; then
  echo ""
  echo " Установка Darktable (darktable) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed darktable  # Утилита для организации и обработки необработанных изображений ; https://darktable.org/ ; http://www.darktable.org/ ; https://archlinux.org/packages/extra/x86_64/darktable/ ; 24 июля 2024 г., 20:13 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Rapid Photo Downloader (rapid-photo-downloader) - Загрузчик фото и видео?"
echo -e "${MAGENTA}:: ${BOLD}Rapid Photo Downloader для Linux написан фотографом для профессиональных и любительских фотографов. Его цель — стать лучшим загрузчиком фотографий и видео для Linux Desktop. ${NC}"
echo " Домашняя страница: https://www.damonlynch.net/rapid/ (https://archlinux.org/packages/extra/any/rapid-photo-downloader/) "  
echo -e "${MAGENTA}:: ${BOLD}Основные характеристики: Создает осмысленные, настраиваемые пользователем имена файлов и папок. Загружает фотографии и видео с нескольких устройств одновременно. Резервное копирование фотографий и видео по мере их загрузки. Тщательно оптимизирован для загрузки и резервного копирования на высокой скорости. Простота настройки и использования. Бесплатная и с открытым исходным кодом программа. Работает в Gnome, KDE и других рабочих средах Linux, а также в подсистеме Windows для Linux в Windows 11. Полностью или частично переведено на многие языки. Конфигурация и использование программы полностью документированы. ${NC}"
echo " Импортируйте фото и видео с фотоаппаратов, телефонов, карт памяти и других устройств; Rapid Photo Downloader загружает со всех камер, поддерживаемых gphoto2, включая смартфоны; Есть функция временной шкалы, которая группирует фотографии и видео в зависимости от того, сколько времени прошло между последовательными снимками. Используйте его для идентификации фото и видео, снятых в разное время в течение одного дня или в течение нескольких дней подряд; Вы можете настроить время, прошедшее между последовательными снимками, которое используется для построения временной шкалы в соответствии с вашими фото и видеосъемками, установив его от 5 минут до 24 часов; Автоматическое определение устройств: камеры, телефоны и карты памяти; Создает понятные, настраиваемые пользователем имена файлов и папок; Есть групповое переименование файлов; Возможно присвоение тегов; Загружает фото и видео с нескольких устройств одновременно; Резервное копирование фото и видео по мере их загрузки; Сортировка файлов по: времени изменения, состоянию метки, имени файла, расширению, типу файла, устройству, по возрастанию/убыванию; Высокая скорость загрузки и резервного копирования. " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_rapid  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_rapid" =~ [^10] ]]
do
    :
done
if [[ $in_rapid == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_rapid == 1 ]]; then
  echo ""
  echo " Установка Rapid Photo Downloader (rapid-photo-downloader) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed rapid-photo-downloader  #  Загрузчик фото и видео ; https://www.damonlynch.net/rapid/ ; https://archlinux.org/packages/extra/any/rapid-photo-downloader/ ; 12 мая 2024 г., 20:13 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Geotag (geotag) - Геотегирование фотографий?"
echo -e "${MAGENTA}:: ${BOLD}Geotag - это программа с открытым исходным кодом, которая позволяет сопоставлять информацию о дате/времени на фотографиях с информацией о местоположении с GPS-устройства или с карты. То есть спуфинг (подмена) GPS на фотографиях сводится к редактированию цифр в таблице. ${NC}"
echo " Домашняя страница: http://geotag.sourceforge.net/ ; (https://archlinux.org/packages/extra/any/geotag/). "  
echo -e "${MAGENTA}:: ${BOLD}Геотегирование фотографий позволяет отдавать компьютеру такие приказы, как «покажи мне на карте, где была сделана эта фотография» или «найди все мои фотографии, сделанные в радиусе трех миль от Букингемского дворца 😃 ». Если вы хотите опубликовать свои фотографии в Интернете, геотегирование позволяет создавать собственные карты, связанные гиперссылками с вашими онлайн-галереями изображений или сервисами, такими как Flickr. ${NC}"
echo " Основные особенности: Geotag написан на Java и работает на большинстве популярных операционных систем. Пользовательский интерфейс позволяет легко добавлять информацию о местоположении к фотографиям. Алгоритмы в Geotag автоматически сопоставляют данные GPS с вашими фотографиями. Для фотографий, сделанных, когда у вашего GPS не было сигнала, вы можете позволить Geotag сделать предположение на основе ближайшей доступной информации GPS. Вы можете показать местоположение фотографии в своем веб-браузере с помощью Google Maps. Вы также можете показать местоположение фотографии в Google Earth, если он установлен на вашем компьютере. При перемещении карты в Google Earth маркер местоположения вашей фотографии постоянно перемещается в центр карты, а его новое положение отправляется обратно в Geotag. Для фотографий, у которых уже есть местоположение, Geotag может искать названия близлежащих мест и сохранять их вместе с изображением. Geotag поддерживает файлы JPEG/JPG и множество файлов RAW, специфичных для поставщиков камер. В настоящее время поддерживаются следующие типы файлов RAW: ARW (Sony), CR2 (Canon), DCR (Kodak), DNG (Adobe), ERF (Epson), MEF (Mamiya), MRW (Minolata), NEF (Nikon), NRW (Nikon), ORF (Olympus), PEF (Pentax), RAF (Fuji), RAW (Panasonic), SR2 (Sony) и SRF (Sony). Geotag имеет открытый исходный код. Он опубликован под лицензией GPL (GNU General Public License). Программа распознает язык, используемый на вашем компьютере, и если перевод на этот язык доступен, Geotag будет использовать его автоматически. В настоящее время программа знает английский, немецкий, датский, голландский, французский, бразильский португальский, чешский, испанский, польский, русский, греческий, шведский и итальянский языки. " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_geotag  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_geotag" =~ [^10] ]]
do
    :
done
if [[ $in_geotag == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_geotag == 1 ]]; then
  echo ""
  echo " Установка Geotag (geotag) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed perl-image-exiftool  # Считыватель и переписчик EXIF-информации, поддерживающий файлы RAW ; https://exiftool.org/ ; https://archlinux.org/packages/extra/any/perl-image-exiftool/ ; 25 июля 2024 г., 1:38 UTC
sudo pacman -S --noconfirm --needed dcraw  # Декодирует любые необработанные изображения с любой цифровой камеры ; https://www.dechifro.org/dcraw/ ; https://archlinux.org/packages/extra/x86_64/dcraw/ ; 4 июля 2024 г., 15:03 UTC
sudo pacman -S --noconfirm --needed gpsbabel  # Чтение, запись и обработка путевых точек GPS в различных форматах ; https://www.gpsbabel.org/ ; https://archlinux.org/packages/extra/x86_64/gpsbabel/ ; 6 мая 2024 г., 18:05 UTC
sudo pacman -S --noconfirm --needed geotag  # Сопоставьте информацию о дате/времени на фотографиях с информацией о местоположении с GPS-устройства или с карты ; http://geotag.sourceforge.net/ ; https://archlinux.org/packages/extra/any/geotag/ ; 12 июля 2024 г., 15:47 UTC
# sudo pacman -Rcns geotag  # Чтобы удалить geotag в Arch Linux
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo -e "${MAGENTA}
  <<< Установка программ для захвата видео (Захват видео и создание фотографий с веб-камеры) >>> ${NC}"
# Installing programs for video capture (Capture videos and create photos from a webcam)
echo ""
echo -e "${BLUE}:: ${NC}Установить Peek (peek) - Запись с экрана?"
echo -e "${MAGENTA}:: ${BOLD}Peek — простая программа для записи коротких скринкастов с экрана. Программа Peek (полное название Peek GIF recorder) предназначена для записи коротких скринкастов с рабочего стола. Это основная задача программы. Peek не «комбайн» для создания профессиональных видео-скринкастов, это небольшая утилита, которая заточена под одну функцию — создать скринкаст выбранной области экрана и сохранить результат без лишних хлопот. ${NC}"
echo " Домашняя страница: https://github.com/phw/peek ; (https://archlinux.org/packages/extra/x86_64/peek/). "  
echo -e "${MAGENTA}:: ${BOLD}Работать с Peek очень просто, интерфейс выполнен максимально понятно. Пользователю достаточно выбрать область экрана, которую необходимо записать, и нажать кнопку Record. Причем область выбирается интересным способом: не простым выделением мышкой нужной области, а перетаскиванием окна программы, которое представляет собой прозрачный прямоугольник, и изменением размеров этого окна. То есть вы располагаете само окно над той областью, которую хотите записать. Перемещать окно во время записи нельзя ¯\_(ツ)_/¯ ${NC}"
echo " Настроек у Peek не очень много, все они размещаются на одном окне, среди них: записывать курсор мыши, выбрать формат выходного файла, установить частоту кадров, степень сжатия (понижение разрешения), задержку в секундах перед началом записи, настроить сочетание клавиш для старта или остановки записи. Результат записи можно сохранить в следующие форматы: Анимированный GIF файл; APNG (Animated Portable Network Graphics); WebM; MP4 и др... " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_peek  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_peek" =~ [^10] ]]
do
    :
done
if [[ $in_peek == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_peek == 1 ]]; then
  echo ""
  echo " Установка Peek (peek) "
sudo pacman -Syy  # обновление баз пакмэна (pacman) 
sudo pacman -S --noconfirm --needed gifski  # GIF-кодер на основе libimagequant (pngquant). Выжимает максимально возможное качество из ужасного формата GIF ; https://gif.ski/ ; https://archlinux.org/packages/extra/x86_64/gifski/ ; June 21, 2024, 7:50 p.m. UTC
sudo pacman -S --noconfirm --needed peek  # Простой рекордер экрана с удобным интерфейсом ; https://github.com/phw/peek ; https://archlinux.org/packages/extra/x86_64/peek/ ; July 13, 2024, 2:53 a.m. UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
#################
# Peek - https://github.com/phw/peek
# Gifski - https://gif.ski/
###############

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить OBS Studio (OBS) (obs-studio) - Потоковое вещание и запись скринкастов?"
echo -e "${MAGENTA}:: ${BOLD}OBS Studio (Open Broadcaster Software®️) - это бесплатная программа для потокового видео-вещания, ведения стримов и записи видео с экрана и внешних устройств. OBS Studio используется для создания скринкастов, проведения онлайн семинаров, лекций, конференций и других мероприятий, требующих потокового вещания видео. OBS Studio позволяет создавать стримы и записывать видео с различных источников. Программа поддерживает создание сцен, которые могут включать различные источники видео и аудио, а также иметь различные настройки записи видео. Во время трансляции можно переключаться между сценами. Для стриминга программа использует распространенный протокол RTMP. Поддерживается стриминг на сервисы: Youtube; Twitch; Facebook Live; Mixer и другие. Можно добавлять свои сервисы. ${NC}"
echo " Домашняя страница: https://obsproject.com/ ; (https://archlinux.org/packages/extra/x86_64/obs-studio/). "  
echo -e "${MAGENTA}:: ${BOLD}Программа имеет довольно простой и понятный интерфейс. Основную область занимает рабочая область, в которой вы распределяете источники видео, которые будут составлять вашу сцену. Каждый источник видео представлен отдельным слоем. Каждый слой можно перемещать или изменять размеры слоя. Остальные управляющие элементы интерфейса размещены в отдельных областях. Каждую область можно вынести в отдельное окно. Это окна для создания сцен и источников видео, микшер, настройки переходов между сценами, управляющие кнопки. ${NC}"
echo " Основные возможности OBS Studio: Возможность добавления нескольких источников видео и объединения их в единую сцену. Создание нескольких сцен и плавное переключения между ними в реальном времени с использование пользовательских переходов. Добавление различных эффектов перехода между сценами. Поддержка фильтров для видео (маска изображения, цветовая коррекция, хромакей, изменение резкости и другие). Поддержка поворота и зеркального отображения видео. Поддержка масштабирования видео, а также обрезка (crop). Запись и потоковое вещание видео с внешних устройств (например, с веб-камеры). Запись и стриминг видео рабочего стола. Запись и стриминг игр с экрана. Настройка битрейта для видео и звука. Аудио микшер с различными фильтрами (шумоподавление, усиление и другие). Использование возможностей GPU при записи с экрана. Использование Intel Quick Sync Video (QSV), NVIDIA NVENC, AMD Video Coding Engine. Кодирование с использованием кодеков H264 (x264) и AAC. Сохранение трансляций в форматах MP4 и FLV. Настраиваемые горячие клавиши почти для всех действий в программе. Режим студии для предварительного просмотра сцен. Режим Multiview для одновременного просмотра сцен (до 8 сцен одновременно) и переключения между ними. Поддержка плагинов. Исходный код: Open Source (открыт); Языки программирования: C++; Библиотеки: Qt; Лицензия: GNU GPL; Приложение переведено на русский язык. " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_obs  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_obs" =~ [^10] ]]
do
    :
done
if [[ $in_obs == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_obs == 1 ]]; then
  echo ""
  echo " Установка OBS Studio (OBS) (obs-studio) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)  
sudo pacman -S --noconfirm --needed obs-studio  # Бесплатное программное обеспечение с открытым исходным кодом для прямой трансляции и записи ; https://obsproject.com/ ; https://archlinux.org/packages/extra/x86_64/obs-studio/ ; Помечено как устаревшее 13 августа 2024 г ; 26 июля 2024 г., 15:23 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить SimpleScreenRec (SSR) (simplescreenrecorder) - Запись экрана (скринкастов)?"
echo -e "${MAGENTA}:: ${BOLD}SimpleScreenRecorder — это программа Linux, для записи программ и игр (скринкастов, вэбинаров). Она предлагает простой интерфейс и позволяет выбирать область экрана, источник аудио, кодирование и формат записи. Программа поддерживает высокое разрешение и настройки качества. SimpleScreenRecorder популярна для создания видеоуроков, игровых записей и демонстраций программ. Ставится просто, работает быстро и на выходе получаем видео по заранее выставленным параметрам. Может записывать звук (pulseaudio/alsa). ${NC}"
echo " Домашняя страница: http://www.maartenbaert.be/simplescreenrecorder/ ; (https://github.com/MaartenBaert/ssr ; https://aur.archlinux.org/packages/simplescreenrecorder). "  
echo -e "${MAGENTA}:: ${BOLD}SimpleScreenRec (SSR) — многофункциональный, мощный экранный рекордер, поддерживающий X11 и OpenGL. Он имеет графический интерфейс пользователя на основе Qt. SSR может записывать весь экран или его часть или записывать приложения OpenGL напрямую. Запись может быть приостановлена и возобновлена в любое время. Поддерживается множество различных форматов файлов и кодеков. Программу SSR легко использовать, так как все имеющиеся настройки уже выставлены по умолчанию. ${NC}"
echo " Функции и возможности: Графический пользовательский интерфейс (на основе Qt). Быстрее, чем VLC и ffmpeg/avconv. Записывает весь экран или его часть, либо записывает напрямую приложения OpenGL (аналогично Fraps в Windows). Корректно синхронизирует аудио и видео (распространенная проблема с VLC и ffmpeg/avconv). Уменьшает частоту кадров видео, если ваш компьютер слишком медленный (вместо того, чтобы использовать всю оперативную память, как это делает VLC). Полная многопоточность: небольшие задержки в работе любого из компонентов никогда не блокируют работу других компонентов, что обеспечивает более плавное видео и лучшую производительность на компьютерах с несколькими процессорами. Приостановите и возобновите запись в любой момент (нажав кнопку или горячую клавишу). Показывает статистику во время записи (размер файла, битрейт, общее время записи, фактическая частота кадров, ...). Возможность предварительного просмотра во время записи, поэтому вам не придется тратить время на запись, а потом выяснять, что какие-то настройки были сделаны неправильно. Для кодирования используются библиотеки libav/ffmpeg, поэтому поддерживается множество различных кодеков и форматов файлов (добавление дополнительных не представляет сложности). Также можно вести прямую трансляцию (экспериментально). Разумные настройки по умолчанию: не нужно ничего менять, если вы этого не хотите. Подсказки практически для всего: нет необходимости читать документацию, чтобы узнать, что делает та или иная функция. SimpleScreenRecorder должен работать на любом дистрибутиве Linux. Исходный код: Open Source (открыт); Языки программирования: C++; Библиотеки: Qt; Лицензия: GNU GPL v3; Приложение переведено на русский язык. " 
echo -e "${CYAN}:: ${NC}Установка SimpleScreenRec (simplescreenrecorder) проходит через сборку из AUR (yay). Если хотите можете собрать пакет через - git clone, PKGBUILD, makepkg - эта функция тоже прописана в сценарии скрипта, НО # закомментирована! "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_simplescreenrecorder  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_simplescreenrecorder" =~ [^10] ]]
do
    :
done
if [[ $in_simplescreenrecorder == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_simplescreenrecorder == 1 ]]; then
  echo ""
  echo " Установка SimpleScreenRec (SSR) (simplescreenrecorder) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
#yay -S jack --noconfirm  # Аудиосервер с малой задержкой ; https://aur.archlinux.org/jack.git (только для чтения, нажмите, чтобы скопировать) ; http://jackaudio.org/ ; 2022-11-05 10:15 (UTC) ; Конфликты: с jack2, pipewire-jack ; Смотрите Зависимости !
######## simplescreenrecorder ########
yay -S simplescreenrecorder --noconfirm  # Многофункциональный инструмент для записи экрана, поддерживающий X11 и OpenGL ; https://aur.archlinux.org/simplescreenrecorder.git (только для чтения, нажмите, чтобы скопировать) ; https://www.maartenbaert.be/simplescreenrecorder/ ; https://aur.archlinux.org/packages/simplescreenrecorder ; https://github.com/MaartenBaert/ssr ; 2024-06-26 16:42 (UTC)
#git clone https://aur.archlinux.org/simplescreenrecorder.git   # (только для чтения, нажмите, чтобы скопировать)
#cd simplescreenrecorder
# makepkg -fsri
# makepkg -si
#makepkg -si --noconfirm   #--не спрашивать каких-либо подтверждений
# makepkg -si --skipinteg
#pwd    # покажет в какой директории мы находимся
#cd ..   # поднимаемся на уровень выше (выходим из папки сборки)
# rm -rf simplescreenrecorder 
#rm -Rf simplescreenrecorder
######## simplescreenrecorder-bin #############
# yay -S simplescreenrecorder-bin --noconfirm  # Простой, но мощный инструмент записи для X11, OpenGL и V4L2. (версия Git) ; https://aur.archlinux.org/simplescreenrecorder-bin.git (только для чтения, нажмите, чтобы скопировать) ; https://github.com/MaartenBaert/ssr ; https://aur.archlinux.org/packages/simplescreenrecorder-bin ; https://builds.garudalinux.org/repos/chaotic-aur/x86_64/simplescreenrecorder-0.4.4-2.1-x86_64.pkg.tar.zst ; 2023-10-23 05:55 (UTC) ; Конфликты: с simplescreenrecorder, simplescreenrecorder-git ; Смотрите Зависимости !
######## lib32-simplescreenrecorder ########
yay -S lib32-simplescreenrecorder --noconfirm  # Записывайте 32-битные приложения OpenGL с помощью SimpleScreenRecorder ; https://aur.archlinux.org/lib32-simplescreenrecorder.git (только для чтения, нажмите, чтобы скопировать) ; https://www.maartenbaert.be/simplescreenrecorder/ ; https://aur.archlinux.org/packages/lib32-simplescreenrecorder ; 2023-04-01 18:01 (UTC) ; git+https://github.com/MaartenBaert/ssr.git#tag=0.4.4
#git clone https://aur.archlinux.org/lib32-simplescreenrecorder.git   # (только для чтения, нажмите, чтобы скопировать)
#cd lib32-simplescreenrecorder
# makepkg -fsri
# makepkg -si
#makepkg -si --noconfirm   #--не спрашивать каких-либо подтверждений
# makepkg -si --skipinteg
#pwd    # покажет в какой директории мы находимся
#cd ..   # поднимаемся на уровень выше (выходим из папки сборки)
# rm -rf lib32-simplescreenrecorder 
#rm -Rf lib32-simplescreenrecorder
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Cheese (cheese) — Работа с Web-камерой?"
echo -e "${MAGENTA}:: ${BOLD}Cheese — это программа для рабочего стола GNOME, которая позволяет вам делать фотографии, видео и все, что угодно, с помощью вашей веб-камеры, подключенной к компьютеру (или встроенной в ноутбук) под Linux. В Cheese имеется несколько веселых эффектов, которые можно применить как к видео так и к фото. Программа очень проста в управлении и имеет простой интерфейс. Разрабатывается в рамках проекта: GNOME; Приложение переведено на русский язык. ${NC}"
echo " Домашняя страница: https://wiki.gnome.org/Apps/Cheese ; (https://archlinux.org/packages/extra/x86_64/cheese/). "  
echo -e "${MAGENTA}:: ${BOLD}Настройки программы Cheese: Чтобы войти в настройки, необходимо выбрать в левом верхнем углу надпись "Cheese", а потом нажать на пункт "Preferences", после чего откроется вот такое меню. В нем можно выбрать используемую камеру, а также разрешение, которое будет использоваться для съемки фото и видео. На вкладке "Capture" можно выставить настройки для режима "Burst", т.е. съемки нескольких кадров с перерывом между съемками. Тут можно задать число фотографий, которые будут сниматься в этом режиме (Number of photos), а также задержку между съемками фотографий в секундах. Программа сохраняет все ваши фото файлы в каталоге /home/user/Pictures/Webcam/, а видеофайлы в каталоге /home/user/Videos/Webcam/, где user - это имя пользователя под которым вы запустили данную программу. ${NC}"
echo " Функции: Это съемка одного кадра (фотография). Если нужно сделать просто снимок с помощью веб-камеры, то выбираем пункт "Photo" и жмем на иконку камеры. Съемка видео, если нужно записать видео с помощью веб-камеры, то выбираем пункт "Video" и жмем на иконку камеры. Съемка нескольких кадров с задержкой, данный режим нужен, например, для того, чтобы снять 5-10 кадров, меняя свое положение и т.д. Чтобы потом можно было выбрать наиболее удачное изображение. Выбираем пункт "Burst" и жмем на иконку камеры. " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_cheese  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_cheese" =~ [^10] ]]
do
    :
done
if [[ $in_cheese == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_cheese == 1 ]]; then
  echo ""
  echo " Установка Cheese (cheese) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed libcheese # Виджет веб-камеры для Clutter и GTK ; https://wiki.gnome.org/Apps/Cheese ; https://archlinux.org/packages/extra/x86_64/libcheese/ ; Октябрь. 20, 2023, 19:02 по всемирному координированному времени
sudo pacman -S --noconfirm --needed cheese  # Снимайте фото и видео с помощью веб-камеры, используя забавные графические эффекты ; https://wiki.gnome.org/Apps/Cheese ; https://archlinux.org/packages/extra/x86_64/cheese/ ; Октябрь. 20, 2023, 19:02 по всемирному координированному времени
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Guvcview (guvcview) - Захват видео?"
echo -e "${MAGENTA}:: ${BOLD}Guvcview (GTK+ UVC Viewer) — программа для захвата видео с веб-камер и других устройств. Поддерживает различные настройки для видео и фото. Целью данного проекта является предоставление простого интерфейса для захвата и просмотра видео с устройств v4l2 с особым упором на драйвер Linux UVC. Проект предоставляет интерфейс управления на основе Gtk3 или Qt5, в зависимости от конфигурации сборки. Также доступен вариант только с консолью. Вы также можете использовать guvcview, у которого есть только окно управления (из консоли: guvcview --control_only), это позволяет управлять изображением в других приложениях, таких как ekiga, cheese, mplayer, skype, ... ${NC}"
echo " Домашняя страница: http://guvcview.sourceforge.net/ ; (https://archlinux.org/packages/extra/x86_64/guvcview/ ; https://archlinux.org/packages/extra/x86_64/guvcview-qt/). "  
echo -e "${MAGENTA}:: ${BOLD}Аудио: Поддержку звука Guvcview можно выбрать из двух API: portaudio или pulseaudio (если доступно). Все интерфейсы (ALSA, OSD, JACK, ...), поддерживаемые portaudio, должны быть доступны в guvcview. Просто убедитесь, что portaudio был скомпилирован с нужными включенными интерфейсами. Динамическое управление UVC: Драйвер UVC для Linux имеет реализацию для элементов управления расширениями (это элементы управления, специфичные для поставщика, и они поддерживаются в спецификации UVC). До сегодняшнего дня только Logitech предоставила спецификации для своих элементов управления расширениями веб-камер UVC, они поддерживаются guvcview. ${NC}"
echo " Программа имеет два окна: «Панель управления» и «GUVCVideo». В «Панели управления» вы можете настроить видео и звук на свое усмотрение, выбрать видео и аудио кодеки, размер картинки, а так же использовать простейшие фильтры (например, «Мозаика» для видео или «Эхо» для звука). Предусмотрена возможность создания скриншотов. Панель «GUVCVideo» показывает непосредственный вывод изображения с камеры, т.е. то, что вы снимаете. Программа не требовательна к ресурсам, обладает большим количеством настроек, бесплатна и переведена на русский. На мой взгляд, ее единственный минус — не очень удобные в использовании два окна." 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Установить Guvcview GTK+ (guvcview),    2 - Установить Guvcview Qt (guvcview-qt),    

    0 - НЕТ - Пропустить установку: " in_guvcview  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_guvcview" =~ [^120] ]]
do
    :
done
if [[ $in_guvcview == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_guvcview == 1 ]]; then
  echo ""
  echo " Установка Guvcview GTK+ (guvcview) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed guvcview-common  # Общие файлы для guvcview ; http://guvcview.sourceforge.net/ ; https://archlinux.org/packages/extra/x86_64/guvcview-common/ ; 21 июня 2024 г., 19:50 UTC
sudo pacman -S --noconfirm --needed guvcview  # Простой интерфейс GTK+ для захвата и просмотра видео с устройств v4l2 ; http://guvcview.sourceforge.net/ ; https://archlinux.org/packages/extra/x86_64/guvcview/ ; 21 июня 2024 г., 19:50 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
elif [[ $in_guvcview == 2 ]]; then
  echo ""
  echo " Установка Guvcview Qt (guvcview-qt) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed guvcview-common  # Общие файлы для guvcview ; http://guvcview.sourceforge.net/ ; https://archlinux.org/packages/extra/x86_64/guvcview-common/ ; 21 июня 2024 г., 19:50 UTC
sudo pacman -S --noconfirm --needed guvcview-qt  #  Простой интерфейс Qt для захвата и просмотра видео с устройств v4l2 ; http://guvcview.sourceforge.net/ ; https://archlinux.org/packages/extra/x86_64/guvcview-qt/ ; 21 июня 2024 г., 19:50 UTC
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Vokoscreen (vokoscreen) - Запись скринкастов?"
echo -e "${MAGENTA}:: ${BOLD}Vokoscreen — это мощное и удобное программное обеспечение для записи экрана, разработанное для того, чтобы помочь пользователям легко записывать действия на рабочем столе. Независимо от того, создаете ли вы обучающие видео, презентации, демонстрации программного обеспечения или просто записываете свой экран для личного использования, Vokoscreen предлагает полный набор функций для удовлетворения ваших потребностей. Программа бесплатная, переведена на русский язык. ${NC}"
echo " Домашняя страница: https://linuxecke.volkoh.de/vokoscreen/vokoscreen.html ; (https://archlinux.org/packages/extra/x86_64/vokoscreen/). "  
echo -e "${MAGENTA}:: ${BOLD}Основные характеристики Vokoscreen: Vokoscreen поддерживает различные форматы видеофайлов, включая MP4, AVI, MKV и WEBM. Эта универсальность гарантирует, что ваши записи можно будет легко распространять на разных устройствах. Vokoscreen позволяет вам выбрать определенную область экрана, которую вы хотите записать. Вы можете выбрать весь экран, определенное окно или определенную пользователем область, что обеспечивает гибкость для различных сценариев записи. Запись звука : программное обеспечение поддерживает запись звука из нескольких источников. Вы можете записывать звук с микрофона, системного звука или с обоих одновременно. Эта функция особенно полезна для создания обучающих программ. Пауза и возобновление : во время сеанса записи вы можете приостановить и возобновить запись в любое время. Эта функция помогает создавать бесшовные видео без необходимости обширного редактирования. Интеграция с веб-камерой : для тех, кому необходимо включить в запись поток с веб-камеры, Vokoscreen предлагает интеграцию с веб-камерой. Это идеально подходит для видеопрезентаций, видеоблогов. Дружественный интерфейс : Vokoscreen может похвастаться интуитивно понятным и простым интерфейсом, что делает его доступным как для новичков, так и для опытных пользователей. Легкое в навигации меню обеспечивает плавный процесс записи. ${NC}"
echo " Применение Vokoscreen: Образовательный контент : преподаватели и педагоги могут использовать Vokoscreen для создания увлекательных обучающих видеороликов и руководств, облегчающих учащимся понимание сложных тем. Демонстрации программного обеспечения : разработчики и технические энтузиасты могут записывать демонстрации и пошаговые руководства по программному обеспечению, демонстрирующие возможности и функциональные возможности различных приложений. Презентации : специалисты могут использовать Vokoscreen для записи презентаций, вебинаров и другого бизнес-контента для последующего просмотра или обмена с коллегами. Геймеры могут записывать свои игровые сеансы, создавать обзоры игр или делиться советами и приемами со своей аудиторией. " 
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_vokoscreen  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_vokoscreen" =~ [^10] ]]
do
    :
done
if [[ $in_vokoscreen == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_vokoscreen == 1 ]]; then
  echo ""
  echo " Установка Vokoscreen (vokoscreen) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
sudo pacman -S --noconfirm --needed vokoscreen  # Простой в использовании создатель скринкастов ; https://linuxecke.volkoh.de/vokoscreen/vokoscreen.html ; https://archlinux.org/packages/extra/x86_64/vokoscreen/ ; git+https://github.com/vkohaupt/vokoscreenNG.git ; 8 июня 2024 г., 17:43 UTC ; Помечено как устаревшее 23 июля 2024 г.
echo ""
echo " Установка утилит (пакетов) выполнена "
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Kazam Screencaster (kazam) - Запись скринкастов?"
echo -e "${MAGENTA}:: ${BOLD}Kazam Screencaster — программа для записи скринкастов — записи видео с экрана вашего компьютера. Обладает очень простым и понятным интерфейсом. ${NC}"
echo " Домашняя страница: https://launchpad.net/kazam ; (https://aur.archlinux.org/packages/kazam). "  
echo -e "${MAGENTA}:: ${BOLD}Программа позволяет записывать все, что происходит на экране вашего компьютера. Можно записывать видео всего экрана, отдельного окна или произвольной области. Можно включить и отключить запись курсора мыши. Поддерживается запись звука с микрофона и/или из колонок. Можно установить задержку начала съемки в секундах. Есть функция создания скриншотов. В качестве скриншота, как и для видео, можно сделать снимок всего экрана, отдельного окна, произвольной области. Доступно контекстное меню в Лаунчере и иконка в области уведомлений. ${NC}"
echo " Работать с Kazam Screencaster очень просто. Вы устанавливаете настройки съемки, нажимаете одну кнопку и программа начинает запись. Отключить запись можно через иконку в области уведомлений. В конце записи вам сразу же предлагается сохранить результирующий видео файл. Файл сохраняется в формате mp4. Скриншоты сохраняются в формате png. Программа переведена на русский язык ʕ ᵔᴥᵔ ʔ . " 
echo -e "${CYAN}:: ${NC}Установка Kazam Screencaster (kazam) проходит через сборку из AUR (yay). Если хотите можете собрать пакет через - git clone, PKGBUILD, makepkg - эта функция тоже прописана в сценарии скрипта, НО # закомментирована! "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " in_kazam  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$in_kazam" =~ [^10] ]]
do
    :
done
if [[ $in_kazam == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $in_kazam == 1 ]]; then
  echo ""
  echo " Установка Kazam Screencaster (kazam) "
sudo pacman -Syy  # обновление баз пакмэна (pacman)
######## kazam ########
yay -S kazam --noconfirm  # Скринкасты и приложения для создания скриншотов, созданные с учетом дизайна ; https://aur.archlinux.org/kazam.git (только для чтения, нажмите, чтобы скопировать) ; https://launchpad.net/kazam ; https://aur.archlinux.org/packages/kazam ; 2020-06-12 07:05 (UTC)
#git clone https://aur.archlinux.org/kazam.git   # (только для чтения, нажмите, чтобы скопировать)
#cd kazam
# makepkg -fsri
# makepkg -si
#makepkg -si --noconfirm   #--не спрашивать каких-либо подтверждений
# makepkg -si --skipinteg
#pwd    # покажет в какой директории мы находимся
#cd ..   # поднимаемся на уровень выше (выходим из папки сборки)
# rm -rf kazam 
#rm -Rf kazam
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
############

clear
echo -e "${CYAN}
  <<< Обновление информации о шрифтах >>> ${NC}"
# Updating font information and creating a backup of grub.cfg and grub files.

echo ""
echo -e "${BLUE}:: ${NC}Обновим информацию о шрифтах"
#echo 'Обновим информацию о шрифтах'
# Update information about fonts
sudo fc-cache -f -v

clear
echo -e "${CYAN}
  <<< Очистка кэша pacman, и Удаление всех пакетов-сирот (неиспользуемых зависимостей) >>>
${NC}"
# Clearing the pacman cache, and Removing unused dependencies.
echo ""
echo -e "${YELLOW}==> Примечание: ${NC}Если! Вы сейчас устанавливали "AUR Helper"-'yay' (не yay-bin), а также Snap (пакет snapd) вместе с ними установилась зависимость 'go' - (Основные инструменты компилятора для языка программирования Go), который весит 559,0 МБ. Так, что если вам не нужна зависимость 'go', для дальнейшей сборки пакетов в установленной системе СОВЕТУЮ удалить её. В случае, если "AUR"-'yay', Snap (пакет snapd) НЕ БЫЛИ установлены, или зависимость 'go' была удалена ранее, то пропустите этот шаг."
echo ""
echo -e "${BLUE}:: ${BOLD}Удаление зависимости 'go' после установки "AUR Helper"-'yay', Snap (пакет snapd). ${NC}"
echo -e "${YELLOW}==> ${NC} Будьте внимательны! Если Вы сомневаетесь в своих действиях, ещё раз обдумайте..."
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да удалить зависимость 'go',     0 - Нет пропустить этот шаг: " rm_tool  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$rm_tool" =~ [^10] ]]
do
    :
done
if [[ $rm_tool == 0 ]]; then
  echo ""
echo " Удаление зависимости 'go' пропущено "
elif [[ $rm_tool == 1 ]]; then
echo ""
# sudo pacman -Rs go
#pacman -Rs go
sudo pacman --noconfirm -Rs go    # --noconfirm  --не спрашивать каких-либо подтверждений
 echo ""
 echo " Удаление зависимость 'go' выполнено "
fi

### Clean pacman cache (Очистить кэш pacman) ####
clear
echo ""
echo -e "${BLUE}:: ${BOLD}Очистка кэша pacman 'pacman -Sc' ${NC}"
echo -e "${CYAN}=> ${NC}Очистка кэша неустановленных пакетов (оставив последние версии оных), и репозиториев..."
sudo pacman --noconfirm -Sc  # Очистка кэша неустановленных пакетов (оставив последние версии оных) # --noconfirm  -не спрашивать каких-либо подтверждений

echo ""
echo -e "${CYAN}=> ${NC}Удалить кэш ВСЕХ установленных пакетов 'pacman -Scc' (высвобождая место на диске)?"
echo " Процесс удаления кэша ВСЕХ установленных пакетов - НЕ был прописан полностью автоматическим, и было принято решение дать возможность пользователю сделать выбор! "
echo -e "${YELLOW}==> ${NC} Будьте внимательны! Если Вы сомневаетесь в своих действиях, ещё раз обдумайте..."
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да удалить кэш,     0 - Нет пропустить этот шаг: " rm_cache  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$rm_cache" =~ [^10] ]]
do
    :
done
if [[ $rm_cache == 0 ]]; then
echo ""
echo " Удаление кэша ВСЕХ установленных пакетов пропущено "
elif [[ $rm_cache == 1 ]]; then
sudo pacman -Scc  # Удалит кеш всех пакетов (можно раз в неделю вручную запускать команду)
#sudo pacman --noconfirm -Scc  # --noconfirm  --не спрашивать каких-либо подтверждений
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Посмотрим список всех пакетов-сирот (которые не используются ни одной программой)"
#echo " Посмотрим список всех пакетов-сирот "
# echo 'Список всех пакетов-сирот'
# List of all orphan packages
sudo pacman -Qdt  # Посмотреть, какие пакеты не используются ничем в системе
#sudo pacman -Qdtq  # Посмотреть, какие пакеты не используются ничем в системе(показать меньше информации для запроса и поиска)
# -----------------------------------
# -Q --query  # Запрос к базе данных
# -d, --deps  # список пакетов, установленных как зависимости
# -t, --unrequired  # список пакетов не (опционально) требуемых
# какими-либо пакетами (-tt для игнорирования optdepends)
# -q, --quiet  # показать меньше информации для запроса и поиска
# ------------------------------------
sleep 3

echo ""
echo -e "${CYAN}=> ${NC}Удаление всех пакетов-сирот (неиспользуемых зависимостей) 'pacman -Qdtq'..."
echo " Процесс удаления всех пакетов-сирот (неиспользуемых зависимостей) - НЕ был прописан полностью автоматическим, и было принято решение дать возможность пользователю сделать выбор. "
echo -e "${YELLOW}==> ${NC} Будьте внимательны! Если Вы сомневаетесь в своих действиях, ещё раз обдумайте..."
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да удалить все пакеты-сироты,     0 - Нет пропустить этот шаг: " rm_orphans  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$rm_orphans" =~ [^10] ]]
do
    :
done
if [[ $rm_orphans == 0 ]]; then
echo ""
echo " Удаление всех пакетов-сирот (неиспользуемых зависимостей) пропущено "
elif [[ $rm_orphans == 1 ]]; then
echo ""
echo " Удаление всех пакетов-сирот (неиспользуемых зависимостей) "
#sudo pacman --noconfirm -Rcsn $(pacman -Qdtq)  # --noconfirm (не спрашивать каких-либо подтверждений), -R --remove (Удалить пакет(ы) из системы), -c, --cascade (удалить пакеты и все пакеты, которые зависят от них), -s, --recursive (удалить ненужные зависимости), -n, --nosave (удалить конфигурационные файлы)
sudo pacman -Rsn $(pacman -Qdtq) && rm -rf ~/.cache/thumbnails/* && rm -rf ~/.build/*
#sudo pacman -Rsn $(pacman -Qqtd)  # удаляет пакеты-сироты (которые не используются ни одной программой)
#sudo rm -rf ~/.cache/thumbnails/*  # удаляет миниатюры фото, которые накапливаются в системе
#sudo rm -rf ~/.build/*  #
# или эта команда:
# sudo pacman -Rsn $(pacman -Qdtq)
### fc-cache -vf
# sudo pacman -Scc && sudo pacman -Rsn $(pacman -Qdtq) && rm -rf ~/.cache/thumbnails/* && rm -rf ~/.build/*
echo ""
echo " Удаление всех пакетов-сирот (неиспользуемых зависимостей) выполнено "
fi

echo ""
echo -e "${BLUE}:: ${NC}Удаление созданной папки (downloads), и скрипта установки программ (archmy3l)"
#echo " Удаление созданной папки (downloads), и скрипта установки программ (archmy3l) "
#echo ' Удаление созданной папки (downloads), и скрипта установки программ (archmy3l) '
# Deleting the created folder (downloads) and the program installation script (archmy3l)
echo -e "${YELLOW}==> Примечание: ${NC}Если таковая (папка) была создана изначально!"
# If it was created initially!
echo " Будьте внимательны! Процесс удаления, был прописан полностью автоматическим. "
# Be careful! Removal process was fully automatic
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again...
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да удалить папку (downloads),     0 - Нет пропустить этот шаг: " rm_down  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$rm_down" =~ [^10] ]]
do
    :
done
if [[ $rm_down == 0 ]]; then
echo ""
echo " Удаление пропущено "
elif [[ $rm_down == 1 ]]; then
echo ""
echo " Удаление папки (downloads), и скрипта установки программ (archmy3l) "
sudo rm -R ~/downloads/  # Если таковая (папка) была создана изначально
sudo rm -rf ~/archmy3l  # Если скрипт не был перемещён в другую директорию
echo " Удаление выполнено "
fi

clear
echo -e "${CYAN}
  <<< Посмотрим и Сохраним список установленного софта (пакетов) >>>
${NC}"
# Let's see and Save the list of installed software (packages).

echo ""
echo -e "${BLUE}:: ${NC}Посмотрим список установленного софта (пакетов)?"
#echo " Посмотрим список Установленного софта (пакетов) "
# echo 'Список Установленного софта (пакетов)'
# List of Installed software (packages)
echo " Список пакетов для просмотра - будет доступен (по времени) в течении 1-ой минуты! "
echo -e "${YELLOW}==> ${NC} Будьте внимательны! Вы можете пропустить это действие..."
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да вывести список софта (пакетов),     0 - Нет пропустить этот шаг: " t_list  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$t_list" =~ [^10] ]]
do
    :
done
if [[ $t_list == 0 ]]; then
echo ""
echo " Вывод списка установленного софта (пакетов) пропущен "
elif [[ $t_list == 1 ]]; then
echo ""
echo " Список установленного софта (пакетов) "
echo ""
sudo pacman -Qqe  # -Q --query  # Запрос к базе данных; -q, --quiet  # показать меньше информации для запроса и поиска; -e, --explicit  # список явно установленных пакетов (фильтр)
echo ""
sleep 60
fi

clear
echo ""
echo -e "${BLUE}:: ${NC}Сохранить список Установленного софта (пакетов)?"
#echo " Сохранить список Установленного софта (пакетов)? "
# Save a list of Installed software (packages)?
echo -e "${CYAN}=> ${NC}В домашней директории пользователя будет создана папка (pkglist), в которой будут созданы и сохранены .txt списки установленного софта (пакетов)..."
echo " Список пакетов будет создан как в подробном, так и в кратком виде - (подробно: pkglist_full.txt; .pkglist.txt; кратко: pkglist.txt; aurlist.txt) "
echo " В дальнейшем Вы можете удалить папку (pkglist), без последствий! "
echo -e "${YELLOW}==> ${NC} Будьте внимательны! Вы можете пропустить это действие..."
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да сохранить список софта (пакетов),     0 - Нет пропустить этот шаг: " set_pkglist  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$set_pkglist" =~ [^10] ]]
do
    :
done
if [[ $set_pkglist == 0 ]]; then
echo ""
echo " Сохранение списка установленного софта (пакетов) пропущено "
elif [[ $set_pkglist == 1 ]]; then
echo ""
echo " Создадим папку (pkglist) в домашней директории "
mkdir ~/pkglist
echo " Сохранение списка установленного софта (пакетов). Подробно "
LANG=C pacman -Sl | awk '/\[installed\]$/ {print $1 "/" $2 "-" $3}' > ~/pkglist/pkglist_full.txt
LANG=C pacman -Sl | awk '/\[installed\]$/ {print $2}' > ~/pkglist/.pkglist.txt
echo " Сохранение списка установленного софта (пакетов). Кратко "
sudo pacman -Qqe > ~/pkglist/pkglist.txt
sudo pacman -Qqm > ~/pkglist/aurlist.txt
echo " Сохранение списка установленного софта (пакетов) выполнено "
fi
###########################################
clear
echo -e "${GREEN}
  <<< Поздравляем! Установка софта (пакетов) завершена! >>> ${NC}"
# Congratulations! Installation is complete.
#echo -e "${GREEN}==> ${NC}Установка завершена!"
#echo 'Установка завершена!'
# The installation is now complete!
echo ""
echo -e "${YELLOW}==> ${NC}Желательно перезагрузить систему для применения изменений"
#echo 'Желательно перезагрузить систему для применения изменений'
# It is advisable to restart the system to apply the changes
echo -e "${BLUE}:: ${BOLD}Посмотрим дату и время ... для проверки времени ${NC}"
date  # Посмотрим дату и время без характеристик для проверки времени
date +'%d/%m/%Y  %H:%M:%S [%:z  %Z]'  # одновременно отображает дату и часовой пояс

echo -e "${BLUE}:: ${BOLD}Отобразить время работы системы ... ${NC}"
uptime

echo -e "${YELLOW}==> ...${NC}"
echo -e "${BLUE}:: ${NC}Если хотите установить дополнительный софт (пакеты), тогда после перезагрузки и входа в систему выполните команду:"
echo -e "${YELLOW}==> ${CYAN}wget git.io/archmy5l && sh archmy5l ${NC}"
# Команды по установке :
# wget git.io/archmy4l
# sh archmy4l
# wget git.io/archmy4 && sh archmy4l --noconfirm
echo -e "${CYAN}:: ${NC}Цель скрипта (archmy4l) - это установка софта (пакетов), включая установку софта (пакетов) из 'AUR'-'yay', и запуск необходимых служб."
echo -e "${CYAN}:: ${NC}Если Вы сомневаетесь в своих действиях, скриптом можно пользоваться как шпаргалкой, открыв его в текстовом редакторе, копируя команды по установке необходимых пакетов."
echo -e "${GREEN}
  <<< Желаю Вам удачи во всех начинаниях, верных и точных решений! >>> ${NC}"
echo ""
echo -e "${GREEN}
  <<< ♥ Либо ты идешь вперед... либо в зад. >>> ${NC}"
#echo '♥ Либо ты идешь вперед... либо в зад.'
# ♥ Either you go forward... or you go up your ass.
# ===============================================
echo -e "${RED}### ${BLUE}########################################################### ${RED}### ${NC}"
echo -e "${RED}==> ${BOLD}Выходим из установленной системы ${NC}"

echo -e "${BLUE}:: ${BOLD}Теперь вам надо ввести exit, затем перезагрузить систему ${NC}"
echo ""
echo " Установка завершена для выхода введите >> exit << "
#exit(0)  # означает чистый выход без каких-либо ошибок (проблем)
#exit(1)  # означает, что была какая-то ошибка (проблема), и именно поэтому программа выходит
#exit
#fi
#clear
# Успех
#Success
#echo "Установка завершена! Перезагрузить."
#echo "Installation complete! Reboot."
##### Шпаргалка запуска необходимых служб #####
### sudo systemctl enable NetworkManager
### sudo systemctl enable bluetooth
### sudo systemctl enable cups.service
### sudo systemctl enable sshd
### sudo systemctl enable avahi-daemon
### sudo systemctl enable tlp # You can comment this command out if you didn't install tlp, see above
### sudo systemctl enable reflector.timer
### sudo systemctl enable fstrim.timer
### sudo systemctl enable libvirtd
### sudo systemctl enable firewalld
### sudo systemctl enable acpid
###**************************
### sudo systemctl disable NetworkManager-wait-online.service
### sudo systemctl disable lvm2-monitor.service
### sudo systemctl disable bluetooth.service
### sudo systemctl disable ModemManager.service
### sudo systemctl disable smartmontools.service
### sudo systemctl disable motd-news.service
### sudo systemctl disable vboxautostart-service
###-------------------------------------------------
### end of script