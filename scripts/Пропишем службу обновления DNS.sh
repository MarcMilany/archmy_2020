#!/bin/bash
#### Смотрите пометки (справочки) и доп.иформацию в самом скрипте! ####

clear
echo ""
echo -e "${GREEN}==> ${NC}Пропишем службу обновления DNS для использования с systemd"
echo -e "${BLUE}:: ${BOLD}Наша сетевая карта получает все настройки для того, чтобы работала сеть и Интернет. Но названия сайтов переводиться в IP адреса не будут, т.к. наша система не знает, какие серверы DNS следует для этого использовать. Напишем собственную службу для этих целей, которую при загрузке будет запускать systemd. А чтобы узнать что-то новое и не заскучать от однообразия, передадим информацию о названии сетевого устройства в качестве параметра, а список DNS серверов сохраним во внешнем файле. ${NC}"
echo -e "${CYAN}:: ${NC}Нам нужно получать информацию о DNS серверах до того, как система будет уверена, что сеть полностью работает, т.е. до достижения цели network.target."
echo -e "${YELLOW}:: ${NC}Будем считать, что информацию о серверах нам достаточно обновлять один раз во время загрузки. И стандартно скажем, что нашу службу требует цель multi-user.target."
echo -e "${YELLOW}:: ${NC}Создаём файл запуска службы update_dns@.service в каталоге /etc/systemd/system/"
echo -e "${RED}=> ${NC}Универсальность этого метода заключается в том что, если в нашей системе окажется несколько сетевых адаптеров, то для каждого из них мы сможем указать свои собственные DNS серверы. Нужно будет просто подготовить набор файлов со списком серверов для каждого из устройств и запускать службу для каждого адаптера в отдельности указывая его имя после @."
echo " После запуска службу в автозагрузку не забывая указать имя сетевой карты после @. "
echo " Будьте внимательны! Вы можете пропустить это действие. В данной опции выбор всегда остаётся за вами. "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p " 
    1 - Да создать,    0 - Нет пропустить: " x_resolvconf  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$x_resolvconf" =~ [^10] ]]
do
    :
done
 if [[ $x_resolvconf == 0 ]]; then
echo ""
echo " Создание и запуск пропущен " 
elif [[ $x_resolvconf == 1 ]]; then
echo ""
echo " Создаём файл запуска службы в каталоге со следующим содержанием: "
echo " Это позволяет применять (указать) свои собственные DNS серверы "
# echo " Создадим папку /system в директории /etc/systemd/ "
# mkdir /etc/systemd/system
echo " Создадим файл запуска службы update_dns@.service в каталоге /etc/systemd/system/ "
touch /etc/systemd/system/update_dns@.service
echo " Пропишем нужные нам значения в созданном файле update_dns@.service "
> /etc/systemd/system/update_dns@.service
cat <<EOF >>/etc/systemd/system/update_dns@.service
[Unit]
Description=Manual resolvconf update (%i)
Before=network.target

[Service]
Type=oneshot
EnvironmentFile=/etc/default/dns@%i
ExecStart=/usr/bin/sh -c 'echo -e "nameserver ${DNS0}\nnameserver ${DNS1}" | resolvconf -a %i'

[Install]
WantedBy=multi-user.target

EOF
echo " Создадим файл dns@eth0 в каталоге /etc/default/ "
touch /etc/default/dns@eth0
echo " Пропишем нужные нам значения в созданном файле dns@eth0 "
> /etc/default/dns@eth0
cat <<EOF >>/etc/default/dns@eth0
#
# Яндекс.DNS IPv4
# Базовый - Быстрый и надежный DNS
DNS0=77.88.8.8  
DNS1=77.88.8.1
#
# Яндекс.DNS IPv6
#2a02:6b8::feed:0ff
#2a02:6b8:0:1::feed:0ff 

# Безопасный - Без мошеннических сайтов и вирусов
#DNS0=77.88.8.88
#DNS1=77.88.8.2
#
# Яндекс.DNS IPv6
#2a02:6b8::feed:bad
#2a02:6b8:0:1::feed:bad 

# Семейный - Без сайтов для взрослых
#DNS0=77.88.8.7
#DNS1=77.88.8.3
#
# Яндекс.DNS IPv6
#2a02:6b8::feed:a11 
#2a02:6b8:0:1::feed:a11


#
# Google Public DNS IPv4
# Общественный - Служба Google DNS (8.8.8.8) получила поддержку протокола безопасности DNS-over-TLS
#DNS0=8.8.8.8  
#DNS1=8.8.4.4
#
# Google Public DNS IPv6
#2001:4860:4860::8888
#2001:4860:4860::8844

EOF

echo " Теперь добавляем службу в автозагрузку не забывая указать имя сетевой карты после @: "
systemctl enable update_dns@eth0.service
fi
sleep 03
# -------------------------------------
# Яндекс.DNS - Безопасный домашний интернет (Высокая скорость; Защита от вирусов и мошенников; Безопасность для детей)
# Скорость работы Яндекс.DNS во всех трёх режимах одинакова. В Базовом режиме не предусмотрена какая-либо фильтрация трафика. В Безопасном режиме обеспечивается защита от заражённых и мошеннических сайтов. Семейный режим включает защиту от опасных сайтов и блокировку сайтов для взрослых.
# Как работает Яндекс.DNS: У Яндекса - более 80 DNS-серверов, расположенных в разных городах и странах. Запросы каждого пользователя обрабатывает ближайший к нему сервер, поэтому с Яндекс.DNS в Базовом режиме сайты открываются быстрее.
# Что такое DNS: DNS - это адресная книга интернета, где указан цифровой адрес каждого сайта. Например, yandex.ru живёт по адресу 213.180.204.11.
# Каждый раз, когда вы заходите на веб-страницу, браузер ищет её адрес в системе DNS. Чем быстрее работает ближайший к вам DNS-сервер, тем быстрее откроется сайт.
# --------------------------------------
# Google Public DNS - бесплатный глобальный сервис системы доменных имен (DNS), используемый в качестве альтернативы DNS вашего интернет-провайдера. Преимущества: повышенная скорость, надежность и безопасность интернет-соединения
# Google Public DNS - альтернативный DNS-сервер, разрабатываемый Google. Сервис обеспечивает ускорение загрузки веб-страниц за счет повышения эффективности кэширования данных, а также улучшенную защиту от атак "IP-спуфинг" и "Отказ в обслуживании (DoS)".
# ======================================




