#!/bin/bash
# loadkeys ru
# setfont cyr-sun16
# clear
#### Смотрите пометки (справочки) и доп.иформацию в самом скрипте! #### 

apptitle="Arch Linux Fast Install v1.6 LegasyBIOS - Version: 2020.07.16.00.40.38 (GPLv3)"
baseurl=https://raw.githubusercontent.com/MarcMilany/archmy_2020/master/url%20links%20abbreviated/git%20url
cpl=0
skipfont="0"
fspkgs=""
EDITOR=nano
#EDITOR=nano visudo  # Выполните команду с правами суперпользователя

MULTIMEDIA_PROG_LANG="russian"  # Installer default language (Язык установки по умолчанию)

script_path=$(readlink -f ${0%/*})

umask 0022 # Определение окончательных прав доступа
# Для суперпользователя (root) umask по умолчанию равна 0022

##################################################################

set -e "\n${RED}Error: ${YELLOW}${*}${NC}"  # Эта команда остановит выполнение сценария после сбоя команды и будет отправлен код ошибки
 
###################################################################

### Help and usage (--help or -h) (Справка)
_help() {
    echo -e "${BLUE}
Installation guide - Arch Wiki
${BOLD}For more information, see the wiki: \
${GREY}<https://wiki.archlinux.org/index.php/Installation_guide>${NC}"
}

### SHARED VARIABLES AND FUNCTIONS (ОБЩИЕ ПЕРЕМЕННЫЕ И ФУНКЦИИ)
### Shell color codes (Цветовые коды оболочки)
RED="\e[1;31m"; GREEN="\e[1;32m"; YELLOW="\e[1;33m"; GREY="\e[3;93m"
BLUE="\e[1;34m"; CYAN="\e[1;36m"; BOLD="\e[1;37m"; MAGENTA="\e[1;35m"; NC="\e[0m"

### Automatic error detection (Автоматическое обнаружение ошибок)
_set() {
    set [--abefhkmnptuvxBCHP] [-o option] [arg ...]
}

_set() {
    set -e "\n${RED}Error: ${YELLOW}${*}${NC}"
    _note "${MSG_ERROR}"
    sleep 1; $$
}

### Display install steps (Отображение шагов установки)
_info() {
    echo -e "${YELLOW}\n==> ${CYAN}${1}...${NC}"; sleep 1
}
  
### Download show progress bar only (Скачать показывать только индикатор выполнения)
_wget() {
    wget "${1}" --quiet --show-progress
}

########################################
### Warning (Предупреждение)
_warning_banner() {
    echo -e "${YELLOW}
   ====================== ♥ Предупреждение ======================
${NC}
Цель сценария (скрипта) - это установка необходимого софта (пакетов) и запуск необходимых служб. 
Смысл в том, что все изменения вы делаете предварительно в самом скрипте и получаете возможность быстрой установки утилит (пакетов), которые Вы решили установить (при условии, что Вы его изменили под себя, в противном случае скрипт установит софт (пакеты) прописанный изначально.
В процессе работы сценария (скрипта) Вам будут задаваться вопросы на установку той, или иной утилиты (пакета) - будьте внимательными! Устанавливаемый софт (пакеты), шрифты - скачивается и устанавливается из 'Официальных репозиториев Arch Linux'. Так же присутствует софт (пакеты), шрифты - устанавливаемый из пользовательского репозитория 'AUR'-'yay', собираются и устанавливаются. Если Вы сомневаетесь в своих действиях, скриптом можно пользоваться как шпаргалкой, открыв его в текстовом редакторе, копируя команды по установке необходимых пакетов, и запуска необходимых служб. В любой ситуации выбор всегда за вами. Вы либо гуляете под дождем, либо просто под ним мокнете.${RED}

  ***************************** ВНИМАНИЕ! ***************************** 
${NC}
Автор не несёт ответственности за любое нанесение вреда при использовании скрипта. 
Вы используйте его на свой страх и риск, или изменяйте под свои личные нужды.
Будьте внимательны! Процесс установки софта (пакетов) устанавливаемого из пользовательского репозитория будет осуществляться через - 'AUR'-'yay' (здесь выбор всегда остаётся за вами - ставить или нет).  
В данный момент сценарий (скрипта) находится в процессе доработки по прописанию устанавливаемого софта (пакетов), и небольшой корректировке (Воен. Внесение поправок в наводку орудий по результатам наблюдений с наблюдательных пунктов).

${BLUE}===> ******************************************************* ${NC}"
}
########################################

### Display banner (Дисплей баннер)
_warning_banner

sleep 9
#echo -e "${MAGENTA}==> ${BOLD}Если у Вас беспроводное соединение, запустите nmtui и подключитесь к сети. ${NC}"
#echo 'Если у Вас беспроводное соединение, запустите nmtui и подключитесь к сети.'
# If you have a wireless connection, launch nmtui and connect to the network. 

echo ""
echo -e "${BLUE}:: ${NC}Установка и настройка начата в $(date +%T)" 
#echo "Установка и настройка начата в $(date +%T)"
# Installation and configuration started in $(date +%T)

echo ""
echo -e "${GREEN}=> ${NC}Для проверки интернета можно пропинговать какой-либо сервис"
echo -e "${MAGENTA}==> ${BOLD}Если у Вас беспроводное соединение, запустите nmtui (Network Manager Text User Interface) и подключитесь к сети. ${NC}"
#echo 'Для проверки интернета можно пропинговать какой-либо сервис'
# To check the Internet, you can ping a service
ping -c2 archlinux.org  # Утилита ping - это очень простой инструмент для диагностики сети
#ping google.com -W 2 -c 1

echo -e "${CYAN}==> ${NC}Если пинг идёт едем дальше ... :)"
#echo 'Если пинг идёт едем дальше ... :)'
# If the ping goes we go further ... :)
sleep 03

clear
echo -e "${CYAN}
  <<< Установка обновлений для системы Arch Linux >>> ${NC}"
# Installation of utilities (packages) for the Arch Linux system begins
echo ""
echo -e "${GREEN}==> ${NC}Обновим вашу систему (базу данных пакетов)?" 
#echo -e "${BLUE}:: ${NC}Обновим вашу систему (базу данных пакетов)"
#echo "Обновим вашу систему (базу данных пакетов)"
# Update your system (package database)
echo -e "${CYAN}=> ${BOLD}В сценарии (скрипте) присутствуют следующие варианты: ${NC}"
echo " 1 - Обновление базы данных пакетов плюс обновление самих пакетов (pacman -Syyu) "
echo -e "${RED}==> Важно! ${NC}Если при обновлении системы прилетели обновления ядра и установились, то Вам нужно желательно остановить исполнения сценария (скрипта), и выполнить команду по обновлению загрузчика 'grub' - sudo grub-mkconfig -o /boot/grub/grub.cfg , затем перезагрузить систему." 
echo -e "${YELLOW}==> Примечание: ${BOLD}Загружаем базу данных пакетов независимо от того, есть ли какие-либо изменения в версиях или нет. ${NC}"
# Loading the package database regardless of whether there are any changes in the versions or not.
echo " 2 - Просто обновить базы данных пакетов пакмэна (pacman -Syy) "
echo -e "${YELLOW}==> Примечание: ${BOLD}Возможно Вас попросят ввести пароль пользователя (user). ${NC}"
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. "
# Be careful! The installation process was fully automatic.
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again... 
echo "" 
while 
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "      
    1 - Обновить и установить (pacman -Syyu),     2 - Обновить базы данных пакетов (pacman -Syy)     

    0 - НЕТ - Пропустить обновление и установку: " upd_sys  # sends right after the keypress; # отправляет сразу после нажатия клавиши    
    echo ''
    [[ "$upd_sys" =~ [^120] ]]
do
    :
done 
if [[ $upd_sys == 0 ]]; then 
echo ""   
echo " Установка обновлений пропущена "
elif [[ $upd_sys == 1 ]]; then
  echo ""    
  echo " Установка обновлений (базы данных пакетов) "
  sudo pacman -Syyu --noconfirm  # Обновление баз плюс обновление пакетов (--noconfirm - не спрашивать каких-либо подтверждений)
# sudo pacman -Syyu  # Обновим вашу систему (базу данных пакетов)
echo ""
echo " Обновление и установка выполнено "
elif [[ $upd_sys == 2 ]]; then
  echo ""    
  echo " Обновим базы данных пакетов... "
###  sudo pacman -Sy
  sudo pacman -Syy  # обновление баз пакмэна (pacman)  
echo ""
echo " Обновление базы данных выполнено "
fi
sleep 01

############### Installing Multimedia utilities ###############
  clear
  echo -e "${MAGENTA}
  <<< Установка Мультимедиа аудиоплееров, видео-проигрывателей, утилит для редактирования медиафайлов в Archlinux >>> ${NC}"
# Installing Multimedia audio players, video players, utilities, and codecs in Archlinux
echo ""
 # Installing Multimedia utilities
echo -e "${CYAN}=> ${BOLD}В сценарии (скрипте) присутствуют следующие варианты: ${NC}"
echo -e "${MAGENTA}=> ${NC}Список утилит (пакетов) для установки: - (audacity, easytag, mediainfo, mediainfo-gui, media-player-info, qnapi, gaupolcmus, vorbisgain, ncmpcpp, mpc, mpd, mjpegtools, qmmp, mplayer, cmus, ffmpegthumbnailer, gnome-subtitles)."
echo -e "${CYAN}:: ${NC}Вы МОЖЕТЕ в скрипте закомментировать НЕнужные вам пакеты!"
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. " 
# Be careful! The installation process was fully automatic
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again... 
#sleep 10
#clear
echo "" 
echo " 1 - Audacity — Самое популярное в мире бесплатное программное обеспечение для записи и редактирования аудио.. "
echo " 2 - EasyTAG — Утилита для просмотра и редактирования тегов для MP3, MP2, FLAC, Ogg... "
echo " 3 - MediaInfo — Предоставляет техническую и теговую информацию о видео или аудио файле. "
echo " 4 - MediaInfo-GUI — Предоставляет техническую и теговую информацию о видео или аудио файле;(интерфейс GUI). "
echo " 5 - Qmmp — Программа является аудио-плеером, написанным с использованием библиотеки Qt. "
echo " 6 - Gaupol — Редактор текстовых файлов субтитров. "
echo " 7 - QNapi — Это бесплатное программное обеспечение для автоматического получения субтитров для заданного файла фильма. "
echo " 8 - MPD - Серверное приложение для воспроизведения музыки. "
echo " 9 - Media-player-info — Данные о плеерах (в основном подключаемых как накопитель USB), в т.ч. расположение каталогов из которых устройство может воспроизводить музыку, поддерживаемые форматы файлов и т.д.. "
echo " 10 - Дополнительные утилиты (пакеты)  — Список утилит (пакетов) для установки: - (vorbisgain, mplayer, cmus, ffmpegthumbnailer, ncmpcpp, mjpegtools, gnome-subtitles). "
echo -e "${MAGENTA}:: ${NC}Данные о дополнительных утилитах Вы можете посмотреть в скрипте установки... "
echo " И закомментировать НЕнужные вам пакеты! "
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. В этом действии выбор остаётся за вами. "
# Be careful! The installation process was fully automatic. In this action, the choice is yours.
echo -e "${YELLOW}==> ${NC}Установка будет производится в порядке перечисления (по очереди)"
#echo 'Установка будет производится в порядке перечисления (по очереди)'
# Installation will be performed in the order listed (one at a time)
#sleep 10
#clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Audacity утилита редактирования аудио?"
echo " Audacity — Самое популярное в мире бесплатное программное обеспечение для записи и редактирования аудио.. "
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " i_audacity  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$i_audacity" =~ [^10] ]]
do
    :
done
if [[ $i_audacity == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $i_audacity == 1 ]]; then
  echo ""
  echo " Установка Audacity утилиты редактирования аудио "
sudo pacman -S --noconfirm --needed audacity  # Программа, позволяющая манипулировать сигналами цифрового звука https://archlinux.org/packages/extra/x86_64/audacity/ ; https://www.audacityteam.org/
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
############ Справка ##################
# Audacity — самое популярное в мире бесплатное программное обеспечение для записи и редактирования аудио. Так что если вы создаете музыку, подкаст или просто играете с аудио, Audacity для вас.
# Да! Audacity всегда был и всегда будет бесплатным для всех.
# Audacity — это простой в использовании многодорожечный аудиоредактор и рекордер для Windows, macOS, GNU/Linux и других операционных систем. Audacity — это бесплатное программное обеспечение с открытым исходным кодом.
# Audacity гордится тем, что имеет открытый исходный код. Это означает, что его исходный код открыт для просмотра и изменения любым желающим.
# Преданное всемирное сообщество страстных любителей аудио объединилось, чтобы сделать Audacity тем любимым программным обеспечением, которым оно является сегодня. Многие сторонние плагины также были разработаны для Audacity благодаря его открытому исходному коду.
##########################################

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить EasyTAG — утилита для просмотра и редактирования тегов?"
echo " EasyTAG — Утилита для просмотра и редактирования тегов для MP3, MP2, FLAC, Ogg... "
echo " Редактор ID3-тегов аудио файлов, которая имеет графический интерфейс. Она написана на C и полагается на GTK+, и id3lib для графики. "
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. "
# Be careful! The installation process was fully automatic
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again...
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " i_easytag  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$i_easytag" =~ [^10] ]]
do
    :
done
if [[ $i_easytag == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $i_easytag == 1 ]]; then
  echo ""
  echo " Установка редактора аудио тегов EasyTAG "
sudo pacman -S --noconfirm --needed easytag  # Простое приложение для просмотра и редактирования тегов в аудиофайлах https://archlinux.org/packages/extra/x86_64/easytag/ ; https://github.com/stsquad/easytag
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
############ Справка ##################
# ОПИСАНИЕ:
# EasyTAG — утилита для просмотра и редактирования тегов для MP3, MP2, FLAC, Ogg
# Файлы Vorbis, Speex, MP4/AAC, MusePack, Monkey's Audio и WavPack. Это просто
# а удобный интерфейс GTK2 упрощает тегирование в GNU/Linux или Windows.
# Редактор ID3-тегов аудио файлов, которая имеет графический интерфейс. Она написана на C и полагается на GTK+, и id3lib для графики.
# Особенности:
# Поддерживаемые форматы: MP3 , MP2 , FLAC , Опус , Speex , Ogg Vorbis , MP4 , MPC и APE
# Доступные поля тегов (в зависимости от формата): название, исполнитель, альбом, диск альбом, год, Номер трека, Жанр, Комментарий, Композитор, Подлинный художник, авторские права, URL, датчик и изображение
# Автоматизированная пометки с помощью пресетов и пользовательские маски
# Переименование файлов с использованием информации тега или внешних текстовых файлов
# Применить изменения в поле (исполнитель, альбом ...) для всех выбранных файлов
# Прочитайте и отображения заголовков файл информацию (битрейт, время ...)
# CDDB поддержка
# Дерево на основе браузера или вид на исполнителе, альбоме
# Рекурсия в подкаталогах
# Генератор Плейлист
# Отменить / функция Повторить
# ФУНКЦИИ:
# В настоящее время EasyTAG поддерживает следующее:
# Просмотр, редактирование, запись тегов файлов MP3, MP2 (тег ID3 с картинками), файлов FLAC
#  (тег FLAC Vorbis), файлы Ogg Vorbis и Speex (тег Ogg Vorbis), MP4/AAC
#  (тег MP4/AAC), MusePack, файлы Monkey's Audio и WavPack (тег APE),
#  Можно редактировать больше полей тегов: Название, Исполнитель, Альбом, Альбом диска, Год, Трек
#  Номер, Жанр, Комментарий, Композитор, Оригинальный артист/исполнитель, Авторские права, URL
#  и имя кодировщика,
# Автоматическая маркировка: анализ имени файла и каталога для автоматического завершения
#  поля (с использованием масок),
# Возможность переименовывать файлы и каталоги из тега (с использованием масок) или по
# загрузка текстового файла,
# Обработать выбранные файлы выбранного каталога,
# Возможность просмотра подкаталогов,
# Рекурсия для тегирования, удаления, переименования, сохранения...,
# Можно задать поле (исполнитель, название,...) для всех остальных выбранных файлов,
# Считывание информации заголовка файла (битрейт, время, ...) и ее отображение,
# Автоматическое заполнение даты, если введена частичная дата,
# Отменить и повторить последние изменения,
# Возможность обработки полей тега и имени файла (преобразование букв в заглавные буквы, строчные буквы, ...),
# Возможность открытия каталога или файла с помощью внешней программы,
# Удаленная и локальная поддержка CDDB для ручного или автоматического поиска,
# Браузер на основе дерева или просмотр по исполнителю и альбому,
# Список для выбора файлов,
# Окно генератора плейлистов,
# Окно поиска файлов,
# Простой и понятный интерфейс!,
# Бразильский португальский, болгарский, китайский, чешский, датский, голландский, французский,
# Немецкий, греческий, венгерский, итальянский, японский, польский, румынский, русский,
# Переводы на испанский, шведский и украинский языки,
# Написан на языке C и использует GTK+ 2 или GTK+ 3 для графического интерфейса.
##########################################

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить MediaInfo — сведение о видео или аудио файле?"
echo -e "${BLUE}:: ${NC}Установить MediaInfo-GUI — (интерфейс GUI)?"
echo " MediaInfo — удобное унифицированное отображение наиболее важных технических и теговых данных для видео- и аудиофайлов. "
echo " Это программное обеспечение с открытым исходным кодом , что означает, что конечные пользователи и разработчики имеют свободу изучать, улучшать и распространять программу ( лицензия в стиле BSD ). "
echo -e "${CYAN}=> ${BOLD}В сценарии (скрипте) присутствуют следующие варианты: ${NC}"
echo -e "${MAGENTA}=> ${NC}Пакет (mediainfo) БУДЕТ установлен вместе с пакетом (mediainfo-gui)." 
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. "
# Be careful! The installation process was fully automatic
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again...
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " i_mediainfo  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$i_mediainfo" =~ [^10] ]]
do
    :
done
if [[ $i_mediainfo == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $i_mediainfo == 1 ]]; then
  echo ""
  echo " Установка MediaInfo и MediaInfo-GUI "
sudo pacman -S --noconfirm --needed mediainfo  # Предоставляет техническую и теговую информацию о видео или аудио файле (интерфейс командной строки) https://archlinux.org/packages/extra/x86_64/mediainfo/ ; https://mediaarea.net/ ; https://mediaarea.net/en/MediaInfo
sudo pacman -S --noconfirm --needed mediainfo-gui  # Предоставляет техническую и теговую информацию о видео или аудио файле (интерфейс GUI) https://archlinux.org/packages/extra/x86_64/mediainfo-gui/ ; https://mediaarea.net/
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
############ Справка ##################
# MediaInfo — удобное унифицированное отображение наиболее важных технических и теговых данных для видео- и аудиофайлов.
# Отображение данных MediaInfo включает в себя:
# Контейнер: формат, профиль, коммерческое название формата, продолжительность, общий битрейт, приложение и библиотека записи, название, автор, режиссер, альбом, номер трека, дата, продолжительность...
# Видео: формат, идентификатор кодека, соотношение сторон, частота кадров, скорость передачи данных, цветовое пространство, цветовая субдискретизация, битовая глубина, тип сканирования, порядок сканирования...
# Аудио: формат, идентификатор кодека, частота дискретизации, каналы, битовая глубина, язык, битрейт...
# Текст: формат, идентификатор кодека, язык субтитров...
# Главы: количество глав, список глав...
# Аналитика MediaInfo включает в себя:
# Контейнер: MPEG-4, QuickTime, Matroska, AVI, MPEG-PS (включая незащищенные DVD), MPEG-TS (включая незащищенные Blu-ray), MXF, GXF, LXF, WMV, FLV, Real...
# Теги: Id3v1, Id3v2, комментарии Vorbis, теги APE...
# Видео: MPEG-1/2 Video, H.263, MPEG-4 Visual (включая DivX, XviD), H.264/AVC, H.265/HEVC, FFV1...
# Аудио: MPEG Audio (включая MP3), AC3, DTS, AAC, Dolby E, AES3, FLAC...
# Субтитры: CEA-608, CEA-708, DTVCC, SCTE-20, SCTE-128, ATSC/53, CDP, DVB-субтитры, телетекст, SRT, SSA, ASS, SAMI...
# Возможности MediaInfo включают в себя:
# Читает множество форматов видео и аудио файлов
# Просмотр информации в различных форматах (текст, таблица, дерево, HTML...)
# Настройте эти форматы просмотра
# Экспортируйте информацию в формате текста, CSV, HTML...
# Доступны версии с графическим пользовательским интерфейсом, интерфейсом командной строки или библиотекой (.dll/.so/.dylib)
# Интеграция с оболочкой (перетаскивание и контекстное меню)
# Интернационализация: отображение любого языка в любой операционной системе
# Возможность локализации (для чего требуются волонтеры — свяжитесь с нами !)
# Лицензия:
# Это программное обеспечение с открытым исходным кодом , что означает, что конечные пользователи и разработчики имеют свободу изучать, улучшать и распространять программу ( лицензия в стиле BSD ).
##########################################

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Qmmp — Аудиоплеер на Qt5-Qt6?"
echo " Qmmp — написан с использованием библиотеки Qt. "
echo " Qmmp — бесплатный аудиоплеер с простым и удобным интерфейсом, где основные функции реализованы в модульной структуре, а внешне напоминает популярнейший проигрыватель Winamp. Каждый модуль программы доступен для управления, тем самым плеер полностью настраивается под себя, а при необходимости можно добавить и свои собственные модули. Также доступен альтернативный интерфейс (http://qmmp.ylsoftware.com/screenshots.php). " 
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. "
# Be careful! The installation process was fully automatic
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again...
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " i_qmmp  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$i_qmmp" =~ [^10] ]]
do
    :
done
if [[ $i_qmmp == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $i_qmmp == 1 ]]; then
  echo ""
  echo " Установка Qmmp — Аудиоплеер "
sudo pacman -S --noconfirm --needed qmmp  # Аудиоплеер на Qt5-6. https://archlinux.org/packages/extra/x86_64/qmmp/ ; http://qmmp.ylsoftware.com/
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
############ Справка ##################
# Qmmp - программа является аудио-плеером, написанным с использованием библиотеки Qt. Программа имеет интерфейс, аналогичный winamp или xmms. Также доступен альтернативный интерфейс (http://qmmp.ylsoftware.com/screenshots.php). 
# Qmmp - бесплатный аудиоплеер с простым и удобным интерфейсом, где основные функции реализованы в модульной структуре, а внешне напоминает популярнейший проигрыватель Winamp. Каждый модуль программы доступен для управления, тем самым плеер полностью настраивается "под себя", а при необходимости можно добавить и свои собственные модули.
# Форматы:
# MPEG1 layer 2/3; Ogg Vorbis; Ogg Opus; Native FLAC/Ogg FLAC; Musepack; WavePack; 
# Трекерные форматы (mod, s3m, it, xm и т.д.)
# ADTS AAC; CD Audio; WMA, Monkey's Audio (и др. форматы библиотеки FFmpeg); PCM WAVE (и др. форматы библиотеки libsndfile); midi; SID
# Форматы звука игровых консолей (AY, GBS, GYM, HES, KSS, NSF, NSFE, SAP, SPC, VGM, VGZ, VTX)
# Системы вывода звука: OSS4 (FreeBSD) ; ALSA (Linux); PulseAudio; PipeWire; JACK; QtMultimedia; Icecast; WaveOut (Win32); DirectSound (Win32); WASAPI (Win32)
##########################################

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Gaupol — Редактор текстовых файлов субтитров.?"
echo " Gaupol — редактор текстовых файлов субтитров. Он помогает вам с такими задачами, как создание и перевод субтитров, синхронизация субтитров для соответствия видео и исправление распространенных ошибок. Gaupol включает встроенный видеоплеер, а также поддерживает запуск внешнего. Gaupol доступен для Linux, выпущен как свободное программное обеспечение под лицензией GNU General Public License (GPL). "
echo " Интерфейс приложения не богат на настройки, но можно установить ширину и высоту главного окна по желаемому размеру, что позволит легко разместить приложение рядом с видеопроигрывателем или любым другим полезным инструментом. " 
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. "
# Be careful! The installation process was fully automatic
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again...
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " i_gaupol  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$i_gaupol" =~ [^10] ]]
do
    :
done
if [[ $i_gaupol == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $i_gaupol == 1 ]]; then
  echo ""
  echo " Установка Gaupol — Редактор текстовых файлов субтитров "
sudo pacman -S --noconfirm --needed gaupol  # Редактор текстовых субтитров https://archlinux.org/packages/extra/any/gaupol/ ; https://otsaloma.io/gaupol/ ; https://github.com/otsaloma/gaupol/tree/master/doc
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
############ Справка ##################
# Редактор текстовых файлов субтитров, который поддерживает несколько форматов файлов субтитров и предоставляет средства для создания, редактирования и перевода субтитров и времени субтитров для соответствия видео.
# Gaupol — редактор текстовых файлов субтитров. Он помогает вам с такими задачами, как создание и перевод субтитров, синхронизация субтитров для соответствия видео и исправление распространенных ошибок. Gaupol включает встроенный видеоплеер, а также поддерживает запуск внешнего. Gaupol доступен для Linux, выпущен как свободное программное обеспечение под лицензией GNU General Public License (GPL).
# Интерфейс приложения не богат на настройки, но можно установить ширину и высоту главного окна по желаемому размеру, что позволит легко разместить приложение рядом с видеопроигрывателем или любым другим полезным инструментом.
# Приложение позволяет открывать более одного файла субтитров благодаря интерфейсу с вкладками.
# Во время работы над проектами субтитров можно использовать свой собственный видеоплеер во время перевода или синхронизации.
##########################################

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить QNapi — для автоматического получения субтитров для заданного файла фильма?"
echo " QNapi — это бесплатное программное обеспечение для автоматического получения субтитров для заданного файла фильма. Оно использует онлайн-базы данных, такие как NapiProjekt, OpenSubtitles и Napisy24. Оно основано на библиотеке Qt5, поэтому его можно запустить на любой поддерживаемой операционной системе, включая Windows, OSX и Linux. https://github.com/QNapi/qnapi. "
echo " QNapi — работает в двух режимах: GUI и CLI. Вы можете загрузить субтитры, просто указав пути к файлам фильмов в качестве аргументов программы, или использовать графический интерфейс и выполнить такое действие там. " 
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. "
# Be careful! The installation process was fully automatic
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again...
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " i_qnapi  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$i_qnapi" =~ [^10] ]]
do
    :
done
if [[ $i_qnapi == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $i_qnapi == 1 ]]; then
  echo ""
  echo " Установка QNapi — для автоматического получения субтитров для заданного файла фильма "
sudo pacman -S --noconfirm --needed qnapi  # Инструмент для загрузки субтитров к фильмам
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
############ Справка ##################
# Qt-клиент для загрузки субтитров к фильмам из NapiProjekt, OpenSubtitles, Napisy24
# QNapi — это бесплатное программное обеспечение для автоматического получения субтитров для заданного файла фильма. Оно использует онлайн-базы данных, такие как NapiProjekt, OpenSubtitles и Napisy24. Оно основано на библиотеке Qt5, поэтому его можно запустить на любой поддерживаемой операционной системе, включая Windows, OSX и Linux. https://github.com/QNapi/qnapi
# QNapi распространяется в соответствии с лицензией GNU General Public License v2 или более поздней версии.
# qnapi — это программное обеспечение для автоматической загрузки и сопоставления субтитров для файлов фильмов. Оно может использовать такие сервисы, как napiprojekt.pl, napisy24.pl и opensubtitles.com.
# qnapi работает в двух режимах: GUI и CLI. Вы можете загрузить субтитры, просто указав пути к файлам фильмов в качестве аргументов программы, или использовать графический интерфейс и выполнить такое действие там.
# АРГУМЕНТЫ:
# -c, --console Загрузить субтитры с помощью консоли
# -q, --quiet Загрузить субтитры тихо, без отображения
# сообщений или окон (подразумевается -d)
# -s, --show-list Показать список субтитров (работает только с -c)
# -d, --dont-show-list Не показывать список субтитров
# (работает только с -c)
# -l, --lang [код] Предпочтительный язык субтитров
# -lb,--lang-backup [код] Альтернативный язык субтитров
# -f, --format [формат] Выбор формата целевого файла субтитров
# (mDVD,MPL2,SRT,TMP)
# -e, --extension [расш.] Выбор расширения целевого файла субтитров
# -o, --options Показать параметры программы (только GUI)
# -h, --help Показать текст справки
# -hl,--help-languages ​​Список доступных языков субтитров
##########################################

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить MPD - Серверное приложение для воспроизведения музыки?"
echo " Music Player Daemon (MPD) — музыкальный проигрыватель с клиент-серверной архитектурой, который воспроизводит музыку из указанного каталога. Воспроизведением управляют при помощи клиента. Управлять сервером (демоном) можно с любой машины из сети, но слушать музыку можно и на своём компьютере, если программу-клиент MPD настроить на подключение к локальному хосту (localhost). "
echo " Такая технология имеет ряд преимуществ. Для работы MPD не нужна X Window System, поэтому перезапуск X или закрытие программы-клиента не влияет на проигрывание (есть и клиенты, которые могут работать в командной строке, например, mpc и ncmpc); на сервере с MPD может даже не быть монитора. Воспроизведением можно управлять с других компьютеров, а также мобильных устройств (есть клиентские приложения для iOS, Android, Symbian и многих других платформ). Управлять воспроизведением музыки можно не только через локальную сеть, но и через Интернет (конфигурационный файл позволяет задать, на каких именно сетевых интерфейсах должен работать сервер). "
echo -e "${CYAN}=> ${BOLD}В сценарии (скрипте) присутствуют следующие варианты: ${NC}"
echo -e "${MAGENTA}=> ${NC}Пакет (mpd) БУДЕТ установлен вместе с пакетом (mpc) - Минималистичный интерфейс командной строки для MPD." 
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. "
# Be careful! The installation process was fully automatic
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again...
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " i_mpd  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$i_mpd" =~ [^10] ]]
do
    :
done
if [[ $i_mpd == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $i_mpd == 1 ]]; then
  echo ""
  echo " Установка Music Player Daemon (MPD) "
sudo pacman -S --noconfirm --needed mpd # Гибкое, мощное серверное приложение для воспроизведения музыки https://archlinux.org/packages/extra/x86_64/mpd/ ; https://github.com/MusicPlayerDaemon/MPD
sudo pacman -S --noconfirm --needed mpc  # Минималистичный интерфейс командной строки для MPD
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
############ Справка ##################
# Music Player Daemon (MPD) — музыкальный проигрыватель с клиент-серверной архитектурой, который воспроизводит музыку из указанного каталога. Воспроизведением управляют при помощи клиента. Управлять сервером (демоном) можно с любой машины из сети, но слушать музыку можно и на своём компьютере, если программу-клиент MPD настроить на подключение к локальному хосту (localhost)[1].
# Такая технология имеет ряд преимуществ. Для работы MPD не нужна X Window System, поэтому перезапуск X или закрытие программы-клиента не влияет на проигрывание (есть и клиенты, которые могут работать в командной строке, например, mpc и ncmpc); на сервере с MPD может даже не быть монитора. Воспроизведением можно управлять с других компьютеров, а также мобильных устройств (есть клиентские приложения для iOS, Android, Symbian и многих других платформ). Управлять воспроизведением музыки можно не только через локальную сеть, но и через Интернет (конфигурационный файл позволяет задать, на каких именно сетевых интерфейсах должен работать сервер).
# Даже если установка клиентского приложения на устройство, с которого необходимо управлять воспроизведением, по каким-то причинам невозможна, то остаётся возможность установить такое клиентское приложение, к которому можно обращаться с других узлов через веб-браузер.
# MPD использует базу данных (как и некоторые другие медиаплееры), чтобы хранить основную информацию о музыкальных файлах (название трека, исполнителя, название альбома и пр.). Как только демон запущен, база данных будет полностью сохранена в оперативной памяти, и нет никакой необходимости обращаться к диску с целью поиска песни и прочтения тегов аудиофайла.
# Демон для воспроизведения музыки различных форматов. Музыка воспроизводится через аудиоустройство сервера. Демон хранит информацию обо всей доступной музыке, и эту информацию можно легко искать и извлекать. Управление проигрывателем, извлечение информации и управление плейлистами можно осуществлять удаленно.
# MPD выпускается под лицензией GNU General Public License версии 2 и распространяется в файле COPYING.
##########################################

clear
echo ""
echo -e "${BLUE}:: ${NC}Установить Media-player-info — Данные о плеерах?"
echo " Media-Player-Info — это репозиторий файлов данных, описывающих возможности медиаплееров, в основном устройств массового хранения. Эти файлы содержат информацию о структуре каталогов, используемых для добавления музыки на эти устройства, поддерживаемых форматах файлов и т. д. ... "
echo " Раньше эти возможности предоставлялись HAL в файле 10-usb-music-players.fdi, но теперь HAL устарел , поэтому информация предоставляется в виде отдельного пакета. "
echo " Данные хранятся в файлах *.mpi (в формате ini-файлов), вместе с правилами udev для идентификации этих устройств. " 
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. "
# Be careful! The installation process was fully automatic
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again...
echo ""
while
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "
    1 - Да установить,     0 - НЕТ - Пропустить установку: " i_mediain  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$i_mediain" =~ [^10] ]]
do
    :
done
if [[ $i_mediain == 0 ]]; then
echo ""
echo " Установка утилит (пакетов) пропущена "
elif [[ $i_mediain == 1 ]]; then
  echo ""
  echo " Установка Media-player-info "
sudo pacman -S --noconfirm --needed media-player-info  # Файлы данных, описывающие возможности медиаплеера для систем post-HAL... https://archlinux.org/packages/extra/any/media-player-info/ ; https://www.freedesktop.org/wiki/Software/media-player-info/ ; https://github.com/OpenMandrivaAssociation/media-player-info
echo ""
echo " Установка утилит (пакетов) выполнена "
fi
############ Справка ##################
# Media-Player-Info — это репозиторий файлов данных, описывающих возможности медиаплееров, в основном устройств массового хранения. Эти файлы содержат информацию о структуре каталогов, используемых для добавления музыки на эти устройства, поддерживаемых форматах файлов и т. д. ...
# Раньше эти возможности предоставлялись HAL в файле 10-usb-music-players.fdi, но теперь HAL устарел , поэтому информация предоставляется в виде отдельного пакета.
# Media-player-info — данные о плеерах (в основном подключаемых как накопитель USB), в т.ч. расположение каталогов из которых устройство может воспроизводить музыку, поддерживаемые форматы файлов и т.д.
# Данные хранятся в файлах *.mpi (в формате ini-файлов), вместе с правилами udev для идентификации этих устройств.
##########################################

clear
echo -e "${MAGENTA}
  <<< Установка Дополнительных Мультимедиа утилит (аудиоплееров, утилит редактирования и т.д.) в Archlinux >>> ${NC}"
# Installing Multimedia utilities (audio players, video players, etc.) in Archlinux

echo ""
echo -e "${GREEN}==> ${NC}Установка Дополнительные утилит (пакетов)  — Список утилит (пакетов) для установки: - (vorbisgain, mplayer, cmus, ffmpegthumbnailer, ncmpcpp, mjpegtools, gnome-subtitles). "
#echo -e "${BLUE}:: ${NC}Установка мультимедиа утилит" 
#echo 'Установка мультимедиа утилит'
# Installing Multimedia utilities
echo -e "${MAGENTA}:: ${NC}Данные о дополнительных утилитах Вы можете посмотреть в скрипте установки... "
echo -e "${CYAN}:: ${NC}Вы МОЖЕТЕ в скрипте закомментировать НЕнужные вам пакеты!"
echo " Будьте внимательны! Процесс установки, был прописан полностью автоматическим. В этом действии выбор остаётся за вами. "
# Be careful! The installation process was fully automatic. In this action, the choice is yours.
echo " Если Вы сомневаетесь в своих действиях, ещё раз обдумайте... "
# If you doubt your actions, think again... 
echo "" 
while 
echo " Действия ввода, выполняется сразу после нажатия клавиши "
    read -n1 -p "      
    1 - Да установить,     0 - НЕТ - Пропустить установку: " multimedia_prog  # sends right after the keypress; # отправляет сразу после нажатия клавиши
    echo ''
    [[ "$multimedia_prog" =~ [^10] ]]
do
    :
done   
if [[ $multimedia_prog == 0 ]]; then  
echo "" 
echo " Установка Мультимедиа утилит пропущена "
elif [[ $multimedia_prog == 1 ]]; then
  echo ""    
  echo " Установка утилит (пакетов) " 
sudo pacman -S --noconfirm --needed mplayer # Медиаплеер для Linux
sudo pacman -S --noconfirm --needed ffmpegthumbnailer  # Легкий эскиз видеофайлов, который может использоваться файловыми менеджерами # возможно присутствует https://archlinux.org/packages/extra/x86_64/ffmpegthumbnailer/
# sudo pacman -S --noconfirm --needed cmus  # Многофункциональный музыкальный проигрыватель на базе ncurses https://man.archlinux.org/man/extra/cmus/cmus.1.en
sudo pacman -S --noconfirm --needed vorbisgain  # Утилита, которая вычисляет значения ReplayGain для файлов Ogg Vorbis
# sudo pacman -S --noconfirm --needed ncmpcpp  # Функциональный клиент MPD - Практически точный клон ncmpc с некоторыми новыми функциями https://wiki.archlinux.org/title/Ncmpcpp
sudo pacman -S --noconfirm --needed mjpegtools  # Набор инструментов, которые могут выполнять запись и воспроизведение видео, простое редактирование с вырезанием и вставкой и сжатие MPEG аудио и видео (возможно присутствует)
# sudo pacman -S --noconfirm --needed gnome-subtitles  # Редактор видеосубтитров для GNOME (Помечено как устаревшее 19.06.2023)
# sudo pacman -S --noconfirm --needed # 
# sudo pacman -S --noconfirm --needed # 
# sudo pacman -S --noconfirm --needed #
  echo ""
echo " Установка утилит (пакетов) выполнена "
fi  
############ Справка ##################
# Мjpegtools - мощный пакет для обработки видео (Захват видео, редактирование, воспроизведение и сжатие в MPEG видео MJPEG)
# http://mjpeg.sourceforge.net/
# https://www.tux.in.ua/articles/443
##########################################

clear
echo -e "${GREEN}
  <<< Поздравляем! Установка завершена. Перезагрузите систему. >>>
${NC}"
echo -e "${BLUE}:: ${BOLD}Посмотрим дату и время ... ${NC}"
date
date +'%d/%m/%Y  %H:%M:%S [%:z  %Z]'    # одновременно отображает дату и часовой пояс
echo -e "${BLUE}:: ${BOLD}Отобразить время работы системы ... ${NC}"
uptime
echo -e "${MAGENTA}==> ${BOLD}После перезагрузки и входа в систему проверьте ваши персональные настройки. ${NC}"
echo -e "${YELLOW}==> ...${NC}"
echo -e "${BLUE}:: ${NC}Если хотите установить дополнительный софт (пакеты), из AUR - через (yay), тогда после перезагрузки и входа в систему выполните команду:"
echo -e "${YELLOW}==> ${CYAN}git clone https://github.com/MarcMilany/archmy_2020.git ${NC}"
echo -e "${CYAN}:: ${NC}Цель скрипта (multimedia_prog_aur) - это установка мультимедиа софта (пакетов), плагинов находящихся в AUR."
echo -e "${CYAN}:: ${NC}Скриптом можно пользоваться как шпаргалкой, открыв его в текстовом редакторе, копируя команды по установке необходимых пакетов, и запуска служб."
echo -e "${GREEN}
  <<< Желаю Вам удачи во всех начинаниях, верных и точных решений! >>> ${NC}"
echo ""
echo -e "${RED}### ${BLUE}########################################################### ${RED}### ${NC}"
echo -e "${RED}==> ${BOLD}Выходим из установленной системы ${NC}"
echo -e "${BLUE}:: ${BOLD}Теперь вам надо ввести (exit) reboot, чтобы перезагрузиться ${NC}"
sleep 03
exit
exit

### end of script